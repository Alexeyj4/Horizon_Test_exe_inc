(lp1
(dp2
S'ModulePrevious'
p3
S'MA_41_Prog'
p4
sS'ModuleCurrent'
p5
S'Horizon_Prog'
p6
sS'Version'
p7
I1
sS'Geometry'
p8
S'1914x1008+-8+0'
p9
sS'ProjectName'
p10
g6
sS'ImportTypes'
p11
(lp12
(S'Pmw'
p13
S'import'
p14
tp15
a(S'Tkinter'
p16
S'from'
p17
tp18
asS'EditorWidths'
p19
((lp20
I132
aI132
a(lp21
I132
aI132
a(lp22
I130
aI130
atp23
sS'ID'
p24
S'Rapyd Project'
p25
sS'ParkingLot'
p26
(dp27
S'SelectedWidreq'
p28
NsS'Widreqs'
p29
(lp30
ssa(dp31
S'PreviousForm'
p32
S'Horizon_Prog'
p33
sS'OnTab'
p34
I1
sS'-Main-'
p35
(dp36
S'Cursor'
p37
S'192.15'
p38
sS'Text'
p39
(lp40
S''
aS'#!/usr/bin/python\n#coding=utf8\n\n'
p41
aS'import rpErrorHandler\nfrom Tkinter import *\n'
p42
aV\u000aconnected=0\u000aCOMtimeout=30\u000astop_reading_COM=0\u000atrim=7\u000a\u000adef lamp_wdg_0():\u000a    write_ram_eep('lamp wdg 0')\u000a    write_ram_eep('at thr gas 1')    \u000a    write_ram_eep('at thr alm 5')    \u000a\u000adef read_string_from_serial():\u000a    char = '*'\u000a    string=""\u000a    while (char<>'') and (char <> '\u005cr'):\u000a        char=ser.read()\u000a        string=string+char\u000a        if char=='\u005cr':\u000a            string=string+'\u005cn'     \u000a        if (char=='') and (string<>""):         \u000a            string=string+'\u005cn'\u000a    return string\u000a\u000adef read_and_print(disable_stop):\u000a    string=''\u000a    if stop_reading_COM==1 and disable_stop==0: return ''\u000a    global connected\u000a    if connected==1: \u000a        string=read_string_from_serial()\u000a        if string<>"":\u000a            App._ReceivedText.insert('1.0', string)\u000a            if 'Mar 25 2020'  in string:  \u000a                App._ReceivedText.insert('1.0', '**********************************************************\u005cn')\u000a                App._ReceivedText.insert('1.0', '***************\u041f\u0415\u0420\u0415\u041f\u0420\u041e\u0428\u0418\u0422\u042c!!!!!!*****************\u005cn')                \u000a                App._ReceivedText.insert('1.0', '**********************************************************\u005cn')                \u000a    return string\u000a            \u000adef verify(string,value,type):\u000a    if type=='ataddr':\u000a        if string.upper().find(("0X"+str(hex(numh()*256+numl()))[2:].zfill(4)).upper())==-1: return 0\u000a    if type=='ipaddr':\u000a        if string.find(value)==-1: return 0\u000a    if type=='macaddr':\u000a        if string.find(value[:12]+str(hex(numh())[2:]).upper().zfill(2)+':'+str(hex(numl())[2:]).upper().zfill(2))==-1: return 0\u000a        \u000a    return 1\u000a        \u000a\u000a\u000adef write_and_verify(param,value,type):\u000a    if value=='': return 1 #1-ok, 0-not ok\u000a    global stop_reading_COM\u000a    stop_reading_COM=1        \u000a\u000a    write_eep(param+' '+value)\u000a    string=write_eep(param)      \u000a\u000a    if verify(string,value,type)==0:\u000a        stop_reading_COM=0\u000a        return 0\u000a        \u000a    stop_reading_COM=0\u000a    return 1\u000a    \u000a    \u000adef loopproc():             \u000a     read_and_print(0)\u000a     setup_ip_mac_etc() \u000a     Root.after(COMtimeout,loopproc) \u000a\u000adef write_ram(string):\u000a    read_and_print(1)\u000a    ser.write(string+'\u005cr') \u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_eep(string):\u000a    read_and_print(1)\u000a    ser.write('eeprom '+string+'\u005cr')\u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_ram_eep(string):      \u000a    write_eep(string)\u000a    write_ram(string)\u000a    \u000a    \u000adef numh():\u000a    return int(math.floor(int(App.serial_number.get())/1000))\u000a   \u000adef numl():\u000a    return int(int(App.serial_number.get()) % 1000)\u000a\u000adef setup_ip_mac_etc():  \u000a\u000a    if App.serial_number.get()=='':return\u000a\u000a    try:\u000a        int(App.serial_number.get())\u000a    except:\u000a        App.serial_number.set('')\u000a        mbox.showerror('\u041e\u0448\u0438\u0431\u043a\u0430','\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b!')\u000a        return\u000a        \u000a        \u000a\u000a    if App.device.get()=='ma41' or App.device.get()=='ma45':    \u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lsr4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lse4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:14:'+hex(numh())[2:]+':'+hex(numl())[2:]) \u000a\u000a    if App.device.get()=='1m500':            \u000a        App.ataddr.set('')\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:14:'+hex(numh())[2:]+':'+hex(numl())[2:])          \u000a        \u000a    if App.device.get()=='ma45': \u000a        App._ma45_treshold_patch.config(state="normal")\u000a    else:   \u000a        App._ma45_treshold_patch.config(state="disabled")\u000a\u000atry:\u000a    #--------------------------------------------------------------------------#\u000a    # User code should go after this comment so it is inside the "try".        #\u000a    #     This allows rpErrorHandler to gain control on an error so it         #\u000a    #     can properly display a Rapyd-aware error message.                    #\u000a    #--------------------------------------------------------------------------#\u000a\u000a    #Adjust sys.path so we can find other modules of this project\u000a   \u000a   \u000a\u000a    \u000a    \u000a    \u000a    if '.' not in sys.path:\u000a        sys.path.append('.')\u000a    #Put lines to import other modules of this project here\u000a \u000a    import sys\u000a    \u000a    import serial\u000a    import msvcrt\u000a    import time\u000a    import math\u000a    import tkMessageBox as mbox\u000a \u000a \u000a    \u000a    if __name__ == '__main__':\u000a
p43
aS"        Root = Tk()\n        import Tkinter\n        Tkinter.CallWrapper = rpErrorHandler.CallWrapper\n        del Tkinter\n        App = Horizon_Prog(Root)\n        App.pack(expand='yes',fill='both')\n"
p44
aS"        Root.geometry('1000x860+10+10')\n        Root.title('Horizon programming')\n\n        \n        Root.after(COMtimeout,loopproc)\n        \n        def left_key(event): \n            if connected==1:\n                App._on__left_command()\n            \n        def right_key(event):\n            if connected==1:\n                 App._on__right_command()            \n\n        def up_key(event):\n                if connected==1:\n                   App._on__prog_and_increment_command()    \n                   \n        def down_key(event):\n                if connected==1:\n                   App._on__Retry_command()                                \n        \n        Root.bind('<Left>', left_key)\n        Root.bind('<Right>', right_key)\n        Root.bind('<Up>', up_key)\n        Root.bind('<Down>', down_key)\n\n        \n        Root.mainloop()\n    #--------------------------------------------------------------------------#\n    # User code should go above this comment.                                  #\n    #--------------------------------------------------------------------------#\nexcept:\n    rpErrorHandler.RunError()"
p45
asg7
I0
sS'Sha'
p46
I7610239
ssS'Forms'
p47
(lp48
(dp49
S'Requested'
p50
g39
sS'Name'
p51
g33
sg28
S'_right'
p52
sS'Type'
p53
S'Tkinter.Frame'
p54
sS'Lines'
p55
(lp56
(lp57
I9854
aI4994
aI1
aa(lp58
I2520
aI4994
aI1
aa(lp59
I1260
aI7884
aI0
aa(lp60
I1260
aI7255
aI0
aa(lp61
I1260
aI6941
aI0
aa(lp62
I1260
aI8779
aI0
aa(lp63
I1260
aI2817
aI0
aa(lp64
I1260
aI2044
aI0
aa(lp65
I1260
aI1729
aI0
aa(lp66
I1260
aI1439
aI0
aa(lp67
I1260
aI1125
aI0
aa(lp68
I475
aI7570
aI1
aa(lp69
I1284
aI7570
aI1
aa(lp70
I1582
aI8331
aI1
aa(lp71
I6184
aI5502
aI0
aa(lp72
I6184
aI6505
aI0
aa(lp73
I6184
aI8561
aI0
aa(lp74
I6184
aI9069
aI0
aa(lp75
I6184
aI6892
aI0
aa(lp76
I6184
aI7388
aI0
aa(lp77
I6184
aI9335
aI0
aa(lp78
I6184
aI5985
aI0
aa(lp79
I6184
aI4135
aI0
aa(lp80
I6184
aI1729
aI0
aa(lp81
I4425
aI2926
aI1
aasg39
(dp82
g37
S'444.25'
p83
sg39
(lp84
S'#------------------------------------------------------------------------------#\n#                                                                              #\n#                                 Horizon_Prog                                 #\n#                                                                              #\n#------------------------------------------------------------------------------#\nclass Horizon_Prog(Frame):\n    def __init__(self,Master=None,*pos,**kw):\n'
p85
aS'        #\n        #Your code here\n        #    \n'
p86
aV\u000a        apply(Frame.__init__,(self,Master),kw)\u000a        self.device = StringVar()\u000a        self.ArrowKeysOn = IntVar()\u000a        self.ataddr = StringVar()\u000a        self.entry_at_addr = StringVar()\u000a        self.entry_at_addr_exe = StringVar()\u000a        self.entry_at_addr_rt = StringVar()\u000a        self.dev_mac = StringVar()\u000a        self.ethipaddr = StringVar()\u000a        self.ethmacaddr = StringVar()\u000a        self.ifbw = IntVar()\u000a        self.entry_ipaddr = StringVar()\u000a        self.ma45_treshold_patch = IntVar()\u000a        self.phyipaddr = StringVar()\u000a        self.phymacaddr = StringVar()\u000a        self.serial_number = StringVar()\u000a        self.text_to_send = StringVar()\u000a        self.text_to_send2 = StringVar()\u000a        self._Frame2 = Frame(self)\u000a        self._Frame2.pack(fill='y',side='left')\u000a        self._Frame4 = Frame(self,background='#dbdbdb')\u000a        self._Frame4.pack(fill='y',side='left')\u000a        self._Frame3 = Frame(self)\u000a        self._Frame3.pack(side='left')\u000a        self._Frame27 = Frame(self._Frame2)\u000a        self._Frame27.pack(side='top')\u000a        self._Label1 = Label(self._Frame27,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 COM-\u043f\u043e\u0440\u0442')\u000a        self._Label1.pack(side='top')\u000a        self._ComPortsList = Listbox(self._Frame27,selectmode='single')\u000a        self._ComPortsList.pack(side='top')\u000a        self._COM_port_connect = Button(self._Frame27\u000a            ,command=self._on__COM_port_connect_command,text='\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442')\u000a        self._COM_port_connect.pack(side='bottom')\u000a        self._Frame26 = Frame(self._Frame2)\u000a        self._Frame26.pack(fill='x',side='top')\u000a        self._Label3 = Label(self._Frame26,justify='left'\u000a            ,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:')\u000a        self._Label3.pack(anchor='w',side='left')\u000a        self._Frame7 = Frame(self._Frame2)\u000a        self._Frame7.pack(fill='x',side='top')\u000a        self._MA41 = Radiobutton(self._Frame7,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41',value='ma41'\u000a            ,variable=self.device)\u000a        self._MA41.pack(anchor='w',side='left')\u000a        self._Frame11 = Frame(self._Frame2)\u000a        self._Frame11.pack(fill='x',side='top')\u000a        self._MA45 = Radiobutton(self._Frame11,command=self._set_serial\u000a            ,text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45',value='ma45',variable=self.device)\u000a        self._MA45.pack(side='left')\u000a        self._ma45_treshold_patch = Checkbutton(self._Frame11,state='disabled'\u000a            ,text='MA-45 patch',variable=self.ma45_treshold_patch)\u000a        self._ma45_treshold_patch.pack(side='left')\u000a        self._Frame12 = Frame(self._Frame2)\u000a        self._Frame12.pack(fill='x',side='top')\u000a        self._LSR4 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204',value='lsr4'\u000a            ,variable=self.device)\u000a        self._LSR4.pack(anchor='w',side='top')\u000a        self._LSE4 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154',value='lse4'\u000a            ,variable=self.device)\u000a        self._LSE4.pack(anchor='w',side='top')\u000a        self._1M500 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500',value='1m500'\u000a            ,variable=self.device)\u000a        self._1M500.pack(anchor='w',side='top')\u000a        self._Frame6 = Frame(self._Frame2)\u000a        self._Frame6.pack(side='top')\u000a        self._Label2 = Label(self._Frame6,text='\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:')\u000a        self._Label2.pack(side='top')\u000a        self._serialnumber = Entry(self._Frame6,textvariable=self.serial_number)\u000a        self._serialnumber.pack(side='top')\u000a        self._prog_and_increment = Button(self._Frame6\u000a            ,command=self._on__prog_and_increment_command,state='disabled'\u000a            ,text='TEST RF (up key)')\u000a        self._prog_and_increment.pack(side='top')\u000a        self._test_adf = Button(self._Frame6,command=self._on__right_command\u000a            ,state='disabled',text='TEST ADF (right key)')\u000a        self._test_adf.pack(side='top')\u000a        self._Retry = Button(self._Frame6,command=self._on__Retry_command\u000a            ,state='disabled',text='Retry (down key)')\u000a        self._Retry.pack(side='top')\u000a        self._ethmacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethmacaddr)\u000a        self._ethmacaddr.pack(side='bottom')\u000a        self._Label8 = Label(self._Frame6,text='eth macaddr:')\u000a        self._Label8.pack(side='bottom')\u000a        self._phymacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phymacaddr)\u000a        self._phymacaddr.pack(side='bottom')\u000a        self._Label7 = Label(self._Frame6,text='phy macaddr:')\u000a        self._Label7.pack(side='bottom')\u000a        self._ethipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethipaddr)\u000a        self._ethipaddr.pack(side='bottom')\u000a        self._Label6 = Label(self._Frame6,text='eth ipaddr:')\u000a        self._Label6.pack(side='bottom')\u000a        self._phyipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phyipaddr)\u000a        self._phyipaddr.pack(side='bottom')\u000a        self._Label5 = Label(self._Frame6,text='phy ipaddr:')\u000a        self._Label5.pack(side='bottom')\u000a        self._ataddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ataddr)\u000a        self._ataddr.pack(side='bottom')\u000a        self._Label9 = Label(self._Frame6,text='at addr')\u000a        self._Label9.pack(side='bottom')\u000a        self._Frame1 = Frame(self._Frame2)\u000a        self._Frame1.pack(side='top')\u000a        self._Label10 = Label(self._Frame1,text='at frequency trim:')\u000a        self._Label10.pack(side='top')\u000a        self._Frame10 = Frame(self._Frame2)\u000a        self._Frame10.pack(side='top')\u000a        self._Frame23 = Frame(self._Frame2,background='#c0c0c0',borderwidth='10')\u000a        self._Frame23.pack(side='top')\u000a        self._Frame22 = Frame(self._Frame2)\u000a        self._Frame22.pack(side='top')\u000a        self._btn_lamp_wdg_0 = Button(self._Frame22\u000a            ,command=self._on__btn_adf_wdg_0_command,state='disabled'\u000a            ,text='lamp wdg 0')\u000a        self._btn_lamp_wdg_0.pack(side='left')\u000a        self._Frame29 = Frame(self._Frame4)\u000a        self._Frame29.pack(side='top')\u000a        self._Label4 = Label(self._Frame29,text='\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:')\u000a        self._Label4.pack(side='bottom')\u000a        self._Frame19 = Frame(self._Frame4)\u000a        self._Frame19.pack(side='top')\u000a        self._Frame14 = Frame(self._Frame4)\u000a        self._Frame14.pack(side='top')\u000a        self._label_Rcvd_Text = Label(self._Frame14\u000a            ,text='\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:')\u000a        self._label_Rcvd_Text.pack(side='top')\u000a        self._ReceivedText = Text(self._Frame14\u000a            ,font=('@Arial Unicode MS', 10, ''),height='35')\u000a        self._ReceivedText.pack(side='top')\u000a        self._Frame9 = Frame(self._Frame4)\u000a        self._Frame9.pack(fill='x',side='top')\u000a        self._btn_dbg0 = Button(self._Frame9,command=self._on__btn_dbg0_command\u000a            ,state='disabled',text='dbg 0')\u000a        self._btn_dbg0.pack(anchor='w',side='left')\u000a        self._btn_dbg1 = Button(self._Frame9,command=self._on__btn_dbg1_command\u000a            ,state='disabled',text='dbg 1')\u000a        self._btn_dbg1.pack(anchor='w',side='left')\u000a        self._Frame28 = Frame(self._Frame4)\u000a        self._Frame28.pack(fill='x',side='top')\u000a        self._btn_ping = Button(self._Frame28,command=self._on__btn_ping_command\u000a            ,state='disabled',text='ping')\u000a        self._btn_ping.pack(side='left')\u000a        self._ipaddr = Entry(self._Frame28,textvariable=self.entry_ipaddr)\u000a        self._ipaddr.pack(side='left')\u000a        self._Frame15 = Frame(self._Frame4)\u000a        self._Frame15.pack(fill='x',side='top')\u000a        self._btn_phyipaddr = Button(self._Frame15\u000a            ,command=self._on__btn_phyipaddr_command,state='disabled'\u000a            ,text='phy ipaddr')\u000a        self._btn_phyipaddr.pack(anchor='w',side='left')\u000a        self._btn_ataddr = Button(self._Frame15\u000a            ,command=self._on__btn_ataddr_command,state='disabled'\u000a            ,text='at addr')\u000a        self._btn_ataddr.pack(side='left')\u000a        self._Frame18 = Frame(self._Frame4)\u000a        self._Frame18.pack(fill='x',side='top')\u000a        self._btn_adf_tst = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_command,state='disabled'\u000a            ,text='adf tst')\u000a        self._btn_adf_tst.pack(anchor='w',side='left')\u000a        self._btn_adf_tst_50 = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_50_command,state='disabled'\u000a            ,text='adf tst 50')\u000a        self._btn_adf_tst_50.pack(anchor='w',side='left')\u000a        self._Frame16 = Frame(self._Frame4)\u000a        self._Frame16.pack(fill='x',side='top')\u000a        self._btn_at_dst_rt = Button(self._Frame16\u000a            ,command=self._on__btn_at_dst_rt_command,state='disabled'\u000a            ,text='at dst 0xXXXX + rt')\u000a        self._btn_at_dst_rt.pack(anchor='w',side='left')\u000a        self._entry_at_addr = Entry(self._Frame16\u000a            ,textvariable=self.entry_at_addr)\u000a        self._entry_at_addr.pack(side='left')\u000a        self._Frame17 = Frame(self._Frame4)\u000a        self._Frame17.pack(fill='x',side='top')\u000a        self._Label11 = Label(self._Frame17,text='\u041b\u0421-\u04204:')\u000a        self._Label11.pack(side='left')\u000a        self._entry_at_addr_exe = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_exe)\u000a        self._entry_at_addr_exe.pack(side='left')\u000a        self._btn_exe_at_dst_rt = Button(self._Frame17\u000a            ,command=self._on__btn_exe_at_dst_rt_command,state='disabled'\u000a            ,text='exe 0xXXXX at dst 0xXXXX + rt')\u000a        self._btn_exe_at_dst_rt.pack(side='left')\u000a        self._Label12 = Label(self._Frame17,text='\u041c\u0410:')\u000a        self._Label12.pack(side='left')\u000a        self._entry_at_addr_rt = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_rt)\u000a        self._entry_at_addr_rt.pack(side='left')\u000a        self._Frame20 = Frame(self._Frame4)\u000a        self._Frame20.pack(fill='x',side='top')\u000a        self._Label13 = Label(self._Frame20,text='\u0414\u043b\u044f \u043a\u0430\u0441\u0441\u0435\u0442\u044b 1-\u041c-5:')\u000a        self._Label13.pack(side='left')\u000a        self._Frame21 = Frame(self._Frame4)\u000a        self._Frame21.pack(fill='x',side='top')\u000a        self._btn_root = Button(self._Frame21,command=self._on__btn_root_command\u000a            ,state='disabled',text='root')\u000a        self._btn_root.pack(anchor='w',side='left')\u000a        self._btn_talnakh = Button(self._Frame21\u000a            ,command=self._on__btn_tanakh_command,state='disabled'\u000a            ,text='talnakh')\u000a        self._btn_talnakh.pack(side='left')\u000a        self._btn_enter = Button(self._Frame21\u000a            ,command=self._on__btn_enter_command,state='disabled'\u000a            ,text='Enter key')\u000a        self._btn_enter.pack(side='left')\u000a        self._btn_dev_mac = Button(self._Frame21\u000a            ,command=self._on__btn_dev_mac_command,state='disabled'\u000a            ,text='dev mac')\u000a        self._btn_dev_mac.pack(side='left')\u000a        self._entry_dev_mac = Entry(self._Frame21,textvariable=self.dev_mac)\u000a        self._entry_dev_mac.pack(side='left')\u000a        self._btn_dev_req = Button(self._Frame21\u000a            ,command=self._on__btn_dev_req_command,state='disabled'\u000a            ,text='dev req')\u000a        self._btn_dev_req.pack(side='left')\u000a        self._Frame5 = Frame(self._Frame10)\u000a        self._Frame5.pack(side='left')\u000a        self._left = Button(self._Frame5,command=self._on__left_command\u000a            ,state='disabled',text='<-------(left key)--at trim left')\u000a        self._left.pack(side='left')\u000a        self._Frame13 = Frame(self._Frame10)\u000a        self._Frame13.pack(side='left')\u000a        self._right = Button(self._Frame13,command=self._on__right_command\u000a            ,state='disabled',text='at trim right--(right key)------->')\u000a        self._right.pack(side='left')\u000a        self._Frame8 = Frame(self._Frame10)\u000a        self._Frame8.pack(side='left')\u000a        self._ArrowKeysOn = Checkbutton(self._Frame8\u000a            ,text='Arrow keys control on',variable=self.ArrowKeysOn)\u000a        self._ArrowKeysOn.pack(side='left')\u000a        self._Frame25 = Frame(self._Frame23)\u000a        self._Frame25.pack(side='left')\u000a        self._ifbw0 = Radiobutton(self._Frame25,text='ifbw 0 (\u0434\u043b\u044f ADF7021)'\u000a            ,value=0,variable=self.ifbw)\u000a        self._ifbw0.pack(side='top')\u000a        self._ifbw1 = Radiobutton(self._Frame25,text='ifbw 1 (\u0434\u043b\u044f ADF7021-N)'\u000a            ,value=1,variable=self.ifbw)\u000a        self._ifbw1.pack(side='top')\u000a        self._Frame24 = Frame(self._Frame23)\u000a        self._Frame24.pack(side='left')\u000a        self._set_ifbw = Button(self._Frame24,command=self._on__set_ifbw_command\u000a            ,state='disabled',text='Set IFBW')\u000a        self._set_ifbw.pack(side='left')\u000a        self._Frame31 = Frame(self._Frame19)\u000a        self._Frame31.pack(expand='yes',fill='x',side='left')\u000a        self._text_to_send = Entry(self._Frame31,textvariable=self.text_to_send)\u000a        self._text_to_send.pack(side='top')\u000a        self._send = Button(self._Frame31,command=self._on__send_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send.pack(fill='x',side='top')\u000a        self._Frame30 = Frame(self._Frame19)\u000a        self._Frame30.pack(expand='yes',fill='x',side='left')\u000a        self._text_to_send2 = Entry(self._Frame30\u000a            ,textvariable=self.text_to_send2)\u000a        self._text_to_send2.pack(side='top')\u000a        self._send2 = Button(self._Frame30,command=self._on__send2_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send2.pack(side='top')\u000a
p87
aV        #\u000a        #Your code here\u000a        #\u000a        \u000a        found = False\u000a \u000a        for i in range(5,64) :\u000a            try :\u000a                port = "COM"+str(i)\u000a                ser = serial.Serial(port)\u000a                ser.close()\u000a                self._ComPortsList.insert(0, port)\u000a                found = True\u000a            except serial.serialutil.SerialException :\u000a                pass\u000a \u000a        if not found :\u000a            mbox.showerror("\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0440\u0442\u043e\u0432 \u043d\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e")\u000a        \u000a\u000a            \u000a\u000a        \u000a        self.device.set('ma41')\u000a        self.serial_number.set('16001')\u000a        self.ifbw.set(0)\u000a        \u000a\u000a        self.text_to_send.set(str("exe 0x0003 sys info"))\u000a        self.text_to_send2.set(str("exe 7 exe 2 sys info"))\u000a        \u000a        self.entry_ipaddr.set('10.2.1.20')\u000a        self.entry_at_addr.set('0x0007')\u000a        self.entry_at_addr_exe.set('0x202')\u000a        self.entry_at_addr_rt.set('0x104d')\u000a        self.dev_mac.set('12345')\u000a        self.ma45_treshold_patch.set(1)\u000a        \u000a
p88
aS'    #\n    #Start of event handler methods\n    #\n'
p89
aS'\n'
aS'\n    def _on__COM_port_connect_command(self'
p90
aV,Event=None):\u000a        global connected\u000a        try:\u000a            global ser                      \u000a            ser = serial.Serial(self._ComPortsList.get(self._ComPortsList.curselection()),timeout=0.02)\u000a            ser.baudrate = 115200\u000a            connected=1\u000a            self._COM_port_connect.config(state='disabled')\u000a            self._prog_and_increment.config(state="normal")\u000a            self._test_adf.config(state="normal")\u000a            self._send.config(state="normal")\u000a            self._send2.config(state="normal")\u000a            self._set_ifbw.config(state="normal")\u000a            self._prog_and_increment.config(state="normal")\u000a            self._left.config(state="normal")\u000a            self._right.config(state="normal")\u000a            self._btn_ping.config(state="normal")\u000a            self._btn_phyipaddr.config(state="normal")\u000a            self._btn_ataddr.config(state="normal")\u000a            self._btn_adf_tst.config(state="normal")            \u000a            self._btn_adf_tst_50.config(state="normal")            \u000a            self._btn_dbg0.config(state="normal")\u000a            self._btn_dbg1.config(state="normal")\u000a            self._btn_at_dst_rt.config(state="normal")\u000a            self._btn_exe_at_dst_rt.config(state="normal")\u000a            self._btn_root.config(state="normal")\u000a            self._btn_talnakh.config(state="normal")\u000a            self._btn_enter.config(state="normal")           \u000a            self._btn_dev_mac.config(state="normal")\u000a            self._btn_dev_req.config(state="normal")            \u000a            self._btn_lamp_wdg_0.config(state="normal")\u000a            self._Retry.config(state="normal")\u000a        except:            \u000a            connected=0\u000a            mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430", "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442")  \u000a            \u000a        \u000a\u000a\u000a
p91
aS'\n    def _on__Retry_command(self'
p92
aS",Event=None): #retry (down key)\n        setup_ip_mac_etc()\n        ok=1\n        \n        self.serial_number.set(str(int(self.serial_number.get())-1))\n        if int(self.serial_number.get())%1000<=0:\n            self.serial_number.set(int(self.serial_number.get())-746)          \n        setup_ip_mac_etc()\n        \n        write_ram('exe '+self.ataddr.get()+' sys info');\n        ok=1\n        \n        \n        \n        pass\n"
p93
aS'\n    def _on__btn_adf_tst_50_command(self'
p94
aS",Event=None):\n        write_ram('adf tst 50')\n"
p95
aS'\n    def _on__btn_adf_tst_command(self'
p96
aS",Event=None):\n        write_ram('adf tst')\n"
p97
aS'\n    def _on__btn_adf_wdg_0_command(self'
p98
aS',Event=None):\n        lamp_wdg_0()\n'
p99
aS'\n    def _on__btn_at_dst_rt_command(self'
p100
aS",Event=None):\n        write_ram('at dst '+str(self.entry_at_addr.get()))\n        write_ram('rt')\n"
p101
aS'\n    def _on__btn_ataddr_command(self'
p102
aS",Event=None):\n        write_ram('at addr')\n"
p103
aS'\n    def _on__btn_dbg0_command(self'
p104
aS",Event=None):\n        write_ram('dbg 0')\n"
p105
aS'\n    def _on__btn_dbg1_command(self'
p106
aS",Event=None):\n        write_ram('dbg 1')\n"
p107
aS'\n    def _on__btn_dev_mac_command(self'
p108
aS",Event=None):\n        write_ram('dev mac '+str(self.dev_mac.get()))\n"
p109
aS'\n    def _on__btn_dev_req_command(self'
p110
aS",Event=None):\n        write_ram('dev req')\n"
p111
aS'\n    def _on__btn_enter_command(self'
p112
aS",Event=None):\n        write_ram('')\n"
p113
aS'\n    def _on__btn_exe_at_dst_rt_command(self'
p114
aS",Event=None):\n        write_ram('exe '+self.entry_at_addr_exe.get()+' at dst '+self.entry_at_addr_rt.get())\n        write_ram('exe '+self.entry_at_addr_exe.get()+' rt')\n"
p115
aS'\n    def _on__btn_phyipaddr_command(self'
p116
aS",Event=None):\n        write_ram('phy ipaddr')\n"
p117
aS'\n    def _on__btn_ping_command(self'
p118
aS",Event=None):\n        write_ram('ping '+str(self.entry_ipaddr.get()))\n"
p119
aS'\n    def _on__btn_root_command(self'
p120
aS",Event=None):\n        write_ram('root')\n"
p121
aS'\n    def _on__btn_tanakh_command(self'
p122
aS",Event=None):\n        write_ram('talnakh')\n"
p123
aS'\n    def _on__left_command(self'
p124
aS',Event=None):\n        global trim\n        if trim <15:\n            trim+=1\n        write_ram_eep("at trim "+str(trim)+\'\\r\')\n'
p125
aS'\n    def _on__prog_and_increment_command(self'
p126
aS",Event=None): #test and inc (up key)\n        setup_ip_mac_etc()\n        ok=1\n        \n        write_ram('exe '+self.ataddr.get()+' sys info');\n        ok=1\n        \n        if ok==1:\n            self.serial_number.set(str(int(self.serial_number.get())+1))\n            if int(self.serial_number.get())%1000>=255:\n               self.serial_number.set(int(self.serial_number.get())+746)\n    \n        \n"
p127
aS'\n    def _on__right_command(self'
p128
aS",Event=None):\n      setup_ip_mac_etc()        \n      write_ram('exe '+self.ataddr.get()+' adf tst 50');        \n"
p129
aS'\n    def _on__send2_command(self'
p130
aS",Event=None):\n        ser.write(self._text_to_send2.get()+'\\r')\n"
p131
aS'\n    def _on__send_command(self'
p132
aS",Event=None):\n        ser.write(self._text_to_send.get()+'\\r')\n        \n\n"
p133
aS'\n    def _on__set_ifbw_command(self'
p134
aS",Event=None):        \n        write_ram_eep('adf ifbw '+str(self.ifbw.get()))\n        \n\n"
p135
aS'\n    def _set_serial(self'
p136
aS",Event=None):\n        if self.device.get()=='ma41':\n            self.serial_number.set('16001')\n            \n        if self.device.get()=='ma45':\n            self.serial_number.set('16001')         \n\n        if self.device.get()=='lsr4':\n            self.serial_number.set('1008')\n\n        if self.device.get()=='lse4':\n            self.serial_number.set('1008')\n      \n        if self.device.get()=='1m500':\n            self.serial_number.set('1008')\n            \n        setup_ip_mac_etc()\n\n\n      \n"
p137
aS'    #\n    #Start of non-Rapyd user code\n    #\n'
p138
aS''
asg7
I0
sg46
I14427519
ssg29
(lp139
(dp140
S'ModuleName'
p141
S'Tkinter'
p142
sg51
g33
sS'WidgetName'
p143
S'Frame'
p144
sS'PackOptions'
p145
(lp146
sg24
(I0
tp147
sS'XY'
p148
(I0
I0
tp149
sS'Bindings'
p150
(lp151
sS'Options'
p152
(lp153
sa(dp154
g141
S'Tkinter'
p155
sg51
S'_1M500'
p156
sg143
S'Radiobutton'
p157
sg145
(lp158
(dp159
g51
S'anchor'
p160
sS'Value'
p161
S'w'
sasg24
Nsg148
(lp162
I1850
aI2600
asg150
(lp163
sg152
(lp164
(dp165
g51
S'text'
p166
sg161
V\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500
p167
sS'Extra'
p168
Nsa(dp169
g51
S'variable'
p170
sg161
S'device'
p171
sg168
S'is.as'
p172
sa(dp173
g51
S'value'
p174
sg161
S'1m500'
p175
sg168
Nsa(dp176
g51
S'command'
p177
sg161
S'_set_serial'
p178
sg168
I1
sa(dp179
g51
S'justify'
p180
sg161
S'left'
p181
sg168
Nsasa(dp182
g141
S'Tkinter'
p183
sg51
S'_ArrowKeysOn'
p184
sg143
S'Checkbutton'
p185
sg145
(lp186
sg24
Nsg148
(lp187
I1570
aI7545
asg150
(lp188
sg152
(lp189
(dp190
g51
S'text'
p191
sg161
S'Arrow keys control on'
p192
sg168
Nsa(dp193
g51
S'variable'
p194
sg161
S'ArrowKeysOn'
p195
sg168
S'sif.ai'
p196
sasa(dp197
g141
S'Tkinter'
p198
sg51
S'_COM_port_connect'
p199
sg143
S'Button'
p200
sg145
(lp201
sg24
Nsg148
(lp202
I1862
aI931
asg150
(lp203
sg152
(lp204
(dp205
g51
S'text'
p206
sg161
V\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442
p207
sg168
Nsa(dp208
g51
S'command'
p209
sg161
S'_on__COM_port_connect_command'
p210
sg168
I1
sasa(dp211
g141
S'Tkinter'
p212
sg51
S'_ComPortsList'
p213
sg143
S'Listbox'
p214
sg145
(lp215
sg24
Nsg148
(lp216
I1850
aI593
asg150
(lp217
sg152
(lp218
(dp219
g51
S'selectmode'
p220
sg161
S'single'
p221
sg168
Nsasa(dp222
g141
S'Tkinter'
p223
sg51
S'_Frame1'
p224
sg143
S'Frame'
p225
sg145
(lp226
sg24
(I0
I0
I6
tp227
sg148
g149
sg150
(lp228
sg152
(lp229
sa(dp230
g141
g223
sg51
S'_Frame10'
p231
sg143
g225
sg145
(lp232
sg24
(I0
I0
I7
tp233
sg148
g149
sg150
(lp234
sg152
(lp235
sa(dp236
g141
S'Tkinter'
p237
sg51
S'_Frame11'
p238
sg143
S'Frame'
p239
sg145
(lp240
(dp241
g51
S'fill'
p242
sg161
S'x'
sasg24
(I0
I0
I3
tp243
sg148
g149
sg150
(lp244
sg152
(lp245
sa(dp246
g141
S'Tkinter'
p247
sg51
S'_Frame12'
p248
sg143
S'Frame'
p249
sg145
(lp250
(dp251
g51
g242
sg161
S'x'
sasg24
(I0
I0
I4
tp252
sg148
g149
sg150
(lp253
sg152
(lp254
sa(dp255
g141
g223
sg51
S'_Frame13'
p256
sg143
g225
sg145
(lp257
sg24
(I0
I0
I7
I1
tp258
sg148
g149
sg150
(lp259
sg152
(lp260
sa(dp261
g141
S'Tkinter'
p262
sg51
S'_Frame14'
p263
sg143
S'Frame'
p264
sg145
(lp265
sg24
(I0
I1
I2
tp266
sg148
g149
sg150
(lp267
sg152
(lp268
sa(dp269
g141
g262
sg51
S'_Frame15'
p270
sg143
g264
sg145
(lp271
(dp272
g51
g242
sg161
S'x'
sasg24
(I0
I1
I5
tp273
sg148
g149
sg150
(lp274
sg152
(lp275
sa(dp276
g141
S'Tkinter'
p277
sg51
S'_Frame16'
p278
sg143
S'Frame'
p279
sg145
(lp280
(dp281
g51
g242
sg161
S'x'
sasg24
(I0
I1
I7
tp282
sg148
g149
sg150
(lp283
sg152
(lp284
sa(dp285
g141
g277
sg51
S'_Frame17'
p286
sg143
g279
sg145
(lp287
(dp288
g51
g242
sg161
S'x'
sasg24
(I0
I1
I8
tp289
sg148
g149
sg150
(lp290
sg152
(lp291
sa(dp292
g141
g277
sg51
S'_Frame18'
p293
sg143
g279
sg145
(lp294
(dp295
g51
g242
sg161
S'x'
sasg24
(I0
I1
I6
tp296
sg148
g149
sg150
(lp297
sg152
(lp298
sa(dp299
g141
S'Tkinter'
p300
sg51
S'_Frame19'
p301
sg143
S'Frame'
p302
sg145
(lp303
sg24
(I0
I1
I1
tp304
sg148
g149
sg150
(lp305
sg152
(lp306
sa(dp307
g141
S'Tkinter'
p308
sg51
S'_Frame2'
p309
sg143
S'Frame'
p310
sg145
(lp311
(dp312
g51
g242
sg161
S'y'
sasg24
(I0
I0
tp313
sg148
g149
sg150
(lp314
sg152
(lp315
sa(dp316
g141
g277
sg51
S'_Frame20'
p317
sg143
g279
sg145
(lp318
(dp319
g51
g242
sg161
S'x'
sasg24
(I0
I1
I9
tp320
sg148
g149
sg150
(lp321
sg152
(lp322
sa(dp323
g141
S'Tkinter'
p324
sg51
S'_Frame21'
p325
sg143
S'Frame'
p326
sg145
(lp327
(dp328
g51
g242
sg161
S'x'
sasg24
(I0
I1
I10
tp329
sg148
g149
sg150
(lp330
sg152
(lp331
sa(dp332
g141
S'Tkinter'
p333
sg51
S'_Frame22'
p334
sg143
S'Frame'
p335
sg145
(lp336
sg24
(I0
I0
I9
tp337
sg148
g149
sg150
(lp338
sg152
(lp339
sa(dp340
g141
g333
sg51
S'_Frame23'
p341
sg143
g335
sg145
(lp342
sg24
(I0
I0
I8
tp343
sg148
g149
sg150
(lp344
sg152
(lp345
(dp346
g51
S'borderwidth'
p347
sg161
S'n:10'
p348
sg168
Nsa(dp349
g51
S'background'
p350
sg161
S'c:#c0c0c0'
p351
sg168
Nsasa(dp352
g141
g333
sg51
S'_Frame24'
p353
sg143
g335
sg145
(lp354
sg24
(I0
I0
I8
I1
tp355
sg148
g149
sg150
(lp356
sg152
(lp357
sa(dp358
g141
g333
sg51
S'_Frame25'
p359
sg143
g335
sg145
(lp360
sg24
(I0
I0
I8
I0
tp361
sg148
g149
sg150
(lp362
sg152
(lp363
sa(dp364
g141
g247
sg51
S'_Frame26'
p365
sg143
g249
sg145
(lp366
(dp367
g51
g242
sg161
S'x'
sasg24
(I0
I0
I1
tp368
sg148
g149
sg150
(lp369
sg152
(lp370
sa(dp371
g141
g247
sg51
S'_Frame27'
p372
sg143
g249
sg145
(lp373
sg24
(I0
I0
I0
tp374
sg148
g149
sg150
(lp375
sg152
(lp376
sa(dp377
g141
S'Tkinter'
p378
sg51
S'_Frame28'
p379
sg143
S'Frame'
p380
sg145
(lp381
(dp382
g51
g242
sg161
S'x'
sasg24
(I0
I1
I4
tp383
sg148
g149
sg150
(lp384
sg152
(lp385
sa(dp386
g141
g300
sg51
S'_Frame29'
p387
sg143
g302
sg145
(lp388
sg24
(I0
I1
I0
tp389
sg148
g149
sg150
(lp390
sg152
(lp391
sa(dp392
g141
S'Tkinter'
p393
sg51
S'_Frame3'
p394
sg143
S'Frame'
p395
sg145
(lp396
sg24
(I0
I2
tp397
sg148
g149
sg150
(lp398
sg152
(lp399
sa(dp400
g141
g300
sg51
S'_Frame30'
p401
sg143
g302
sg145
(lp402
(dp403
g51
S'expand'
p404
sg161
S'yes'
p405
sa(dp406
g51
g242
sg161
S'x'
sasg24
(I0
I1
I1
I1
tp407
sg148
g149
sg150
(lp408
sg152
(lp409
sa(dp410
g141
g300
sg51
S'_Frame31'
p411
sg143
g302
sg145
(lp412
(dp413
g51
g404
sg161
g405
sa(dp414
g51
g242
sg161
S'x'
sasg24
(I0
I1
I1
I0
tp415
sg148
g149
sg150
(lp416
sg152
(lp417
sa(dp418
g141
g393
sg51
S'_Frame4'
p419
sg143
g395
sg145
(lp420
(dp421
g51
g242
sg161
S'y'
sasg24
(I0
I1
tp422
sg148
g149
sg150
(lp423
sg152
(lp424
(dp425
g51
g350
sg161
S'c:#dbdbdb'
p426
sg168
Nsasa(dp427
g141
g223
sg51
S'_Frame5'
p428
sg143
g225
sg145
(lp429
sg24
(I0
I0
I7
I0
tp430
sg148
g149
sg150
(lp431
sg152
(lp432
sa(dp433
g141
g223
sg51
S'_Frame6'
p434
sg143
g225
sg145
(lp435
sg24
(I0
I0
I5
tp436
sg148
g149
sg150
(lp437
sg152
(lp438
sa(dp439
g141
g237
sg51
S'_Frame7'
p440
sg143
g239
sg145
(lp441
(dp442
g51
g242
sg161
S'x'
sasg24
(I0
I0
I2
tp443
sg148
g149
sg150
(lp444
sg152
(lp445
sa(dp446
g141
S'Tkinter'
p447
sg51
S'_Frame8'
p448
sg143
S'Frame'
p449
sg145
(lp450
sg24
(I0
I0
I7
I2
tp451
sg148
g149
sg150
(lp452
sg152
(lp453
sa(dp454
g141
g262
sg51
S'_Frame9'
p455
sg143
g264
sg145
(lp456
(dp457
g51
g242
sg161
S'x'
sasg24
(I0
I1
I3
tp458
sg148
g149
sg150
(lp459
sg152
(lp460
sa(dp461
g141
g155
sg51
S'_LSE4'
p462
sg143
g157
sg145
(lp463
(dp464
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp465
I1862
aI2382
asg150
(lp466
sg152
(lp467
(dp468
g51
g166
sg161
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154
p469
sg168
Nsa(dp470
g51
g170
sg161
S'device'
p471
sg168
S'is.as'
p472
sa(dp473
g51
g174
sg161
S'lse4'
p474
sg168
Nsa(dp475
g51
g177
sg161
g178
sg168
I1
sa(dp476
g51
g180
sg161
g181
sg168
Nsasa(dp477
g141
g155
sg51
S'_LSR4'
p478
sg143
g157
sg145
(lp479
(dp480
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp481
I1862
aI2164
asg150
(lp482
sg152
(lp483
(dp484
g51
g166
sg161
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204
p485
sg168
Nsa(dp486
g51
g170
sg161
S'device'
p487
sg168
S'is.as'
p488
sa(dp489
g51
g174
sg161
S'lsr4'
p490
sg168
Nsa(dp491
g51
g177
sg161
g178
sg168
I1
sa(dp492
g51
g180
sg161
g181
sg168
Nsasa(dp493
g141
g198
sg51
S'_Label1'
p494
sg143
S'Label'
p495
sg145
(lp496
sg24
Nsg148
(lp497
I1862
aI206
asg150
(lp498
sg152
(lp499
(dp500
g51
S'text'
p501
sg161
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 COM-\u043f\u043e\u0440\u0442
p502
sg168
Nsasa(dp503
g141
S'Tkinter'
p504
sg51
S'_Label10'
p505
sg143
S'Label'
p506
sg145
(lp507
sg24
Nsg148
(lp508
I1351
aI7050
asg150
(lp509
sg152
(lp510
(dp511
g51
g501
sg161
S'at frequency trim:'
p512
sg168
Nsasa(dp513
g141
S'Tkinter'
p514
sg51
S'_Label11'
p515
sg143
S'Label'
p516
sg145
(lp517
sg24
Nsg148
(lp518
I3500
aI8767
asg150
(lp519
sg152
(lp520
(dp521
g51
g501
sg161
V\u041b\u0421-\u04204:
p522
sg168
Nsasa(dp523
g141
g514
sg51
S'_Label12'
p524
sg143
g516
sg145
(lp525
sg24
Nsg148
(lp526
I4674
aI8815
asg150
(lp527
sg152
(lp528
(dp529
g51
g501
sg161
V\u041c\u0410:
p530
sg168
Nsasa(dp531
g141
S'Tkinter'
p532
sg51
S'_Label13'
p533
sg143
S'Label'
p534
sg145
(lp535
sg24
Nsg148
(lp536
I3360
aI9154
asg150
(lp537
sg152
(lp538
(dp539
g51
g501
sg161
V\u0414\u043b\u044f \u043a\u0430\u0441\u0441\u0435\u0442\u044b 1-\u041c-5:
p540
sg168
Nsasa(dp541
g141
S'Tkinter'
p542
sg51
S'_Label2'
p543
sg143
S'Label'
p544
sg145
(lp545
sg24
Nsg148
(lp546
I1850
aI2878
asg150
(lp547
sg152
(lp548
(dp549
g51
g501
sg161
V\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:
p550
sg168
Nsasa(dp551
g141
S'Tkinter'
p552
sg51
S'_Label3'
p553
sg143
S'Label'
p554
sg145
(lp555
(dp556
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp557
I341
aI1221
asg150
(lp558
sg152
(lp559
(dp560
g51
g501
sg161
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:
p561
sg168
Nsa(dp562
g51
S'justify'
p563
sg161
g181
sg168
Nsasa(dp564
g141
g552
sg51
S'_Label4'
p565
sg143
g554
sg145
(lp566
sg24
Nsg148
(lp567
I4680
aI1330
asg150
(lp568
sg152
(lp569
(dp570
g51
g501
sg161
V\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:
p571
sg168
Nsasa(dp572
g141
g552
sg51
S'_Label5'
p573
sg143
g554
sg145
(lp574
sg24
Nsg148
(lp575
I1850
aI5067
asg150
(lp576
sg152
(lp577
(dp578
g51
g501
sg161
S'phy ipaddr:'
p579
sg168
Nsasa(dp580
g141
g552
sg51
S'_Label6'
p581
sg143
g554
sg145
(lp582
sg24
Nsg148
(lp583
I1850
aI5514
asg150
(lp584
sg152
(lp585
(dp586
g51
g501
sg161
S'eth ipaddr:'
p587
sg168
Nsasa(dp588
g141
g552
sg51
S'_Label7'
p589
sg143
g554
sg145
(lp590
sg24
Nsg148
(lp591
I1844
aI5985
asg150
(lp592
sg152
(lp593
(dp594
g51
g501
sg161
S'phy macaddr:'
p595
sg168
Nsasa(dp596
g141
g552
sg51
S'_Label8'
p597
sg143
g554
sg145
(lp598
sg24
Nsg148
(lp599
I1850
aI6433
asg150
(lp600
sg152
(lp601
(dp602
g51
g501
sg161
S'eth macaddr:'
p603
sg168
Nsasa(dp604
g141
S'Tkinter'
p605
sg51
S'_Label9'
p606
sg143
S'Label'
p607
sg145
(lp608
sg24
Nsg148
(lp609
I1862
aI4583
asg150
(lp610
sg152
(lp611
(dp612
g51
g501
sg161
S'at addr'
p613
sg168
Nsasa(dp614
g141
g155
sg51
S'_MA41'
p615
sg143
g157
sg145
(lp616
(dp617
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp618
I481
aI1560
asg150
(lp619
sg152
(lp620
(dp621
g51
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41
p622
sg168
Nsa(dp623
g51
g170
sg161
S'device'
p624
sg168
S'is.as'
p625
sa(dp626
g51
g174
sg161
S'ma41'
p627
sg168
Nsa(dp628
g51
g177
sg161
g178
sg168
I1
sa(dp629
g51
g180
sg161
g181
sg168
Nsasa(dp630
g141
g155
sg51
S'_MA45'
p631
sg143
g157
sg145
(lp632
sg24
Nsg148
(lp633
I201
aI1838
asg150
(lp634
sg152
(lp635
(dp636
g51
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45
p637
sg168
Nsa(dp638
g51
g170
sg161
S'device'
p639
sg168
S'is.as'
p640
sa(dp641
g51
g174
sg161
S'ma45'
p642
sg168
Nsa(dp643
g51
g177
sg161
g178
sg168
I1
sasa(dp644
g141
g198
sg51
S'_ReceivedText'
p645
sg143
S'Text'
p646
sg145
(lp647
sg24
Nsg148
(lp648
I5161
aI5018
asg150
(lp649
sg152
(lp650
(dp651
g51
S'height'
p652
sg161
S'n:35'
p653
sg168
Nsa(dp654
g51
S'font'
p655
sg161
(S'@Arial Unicode MS'
I10
S''
tp656
sg168
Nsasa(dp657
g141
S'Tkinter'
p658
sg51
S'_Retry'
p659
sg143
S'Button'
p660
sg145
(lp661
sg24
Nsg148
(lp662
I1869
aI4123
asg150
(lp663
sg152
(lp664
(dp665
g51
g206
sg161
S'Retry (down key)'
p666
sg168
Nsa(dp667
g51
S'state'
p668
sg161
S'disabled'
p669
sg168
Nsa(dp670
g51
g209
sg161
S'_on__Retry_command'
p671
sg168
I1
sasa(dp672
g141
g605
sg51
S'_ataddr'
p673
sg143
S'Entry'
p674
sg145
(lp675
sg24
Nsg148
(lp676
I1856
aI4849
asg150
(lp677
sg152
(lp678
(dp679
g51
S'state'
p680
sg161
S'disabled'
p681
sg168
Nsa(dp682
g51
S'textvariable'
p683
sg161
S'ataddr'
p684
sg168
S's.as'
p685
sasa(dp686
g141
S'Tkinter'
p687
sg51
S'_btn_adf_tst'
p688
sg143
S'Button'
p689
sg145
(lp690
(dp691
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp692
I3737
aI7074
asg150
(lp693
sg152
(lp694
(dp695
g51
g206
sg161
S'adf tst'
p696
sg168
Nsa(dp697
g51
g668
sg161
S'disabled'
p698
sg168
Nsa(dp699
g51
g209
sg161
S'_on__btn_adf_tst_command'
p700
sg168
I1
sasa(dp701
g141
g687
sg51
S'_btn_adf_tst_50'
p702
sg143
g689
sg145
(lp703
(dp704
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp705
I4017
aI7098
asg150
(lp706
sg152
(lp707
(dp708
g51
g206
sg161
S'adf tst 50'
p709
sg168
Nsa(dp710
g51
g668
sg161
g698
sg168
Nsa(dp711
g51
g209
sg161
S'_on__btn_adf_tst_50_command'
p712
sg168
I1
sasa(dp713
g141
g687
sg51
S'_btn_at_dst_rt'
p714
sg143
g689
sg145
(lp715
(dp716
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp717
I3506
aI8319
asg150
(lp718
sg152
(lp719
(dp720
g51
g206
sg161
S'at dst 0xXXXX + rt'
p721
sg168
Nsa(dp722
g51
g668
sg161
g698
sg168
Nsa(dp723
g51
g209
sg161
S'_on__btn_at_dst_rt_command'
p724
sg168
I1
sasa(dp725
g141
g514
sg51
S'_btn_ataddr'
p726
sg143
S'Button'
p727
sg145
(lp728
sg24
Nsg148
(lp729
I4297
aI6687
asg150
(lp730
sg152
(lp731
(dp732
g51
g206
sg161
S'at addr'
p733
sg168
Nsa(dp734
g51
g668
sg161
S'disabled'
p735
sg168
Nsa(dp736
g51
g209
sg161
S'_on__btn_ataddr_command'
p737
sg168
I1
sasa(dp738
g141
g687
sg51
S'_btn_dbg0'
p739
sg143
g689
sg145
(lp740
(dp741
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp742
I3950
aI5707
asg150
(lp743
sg152
(lp744
(dp745
g51
g206
sg161
S'dbg 0'
p746
sg168
Nsa(dp747
g51
g668
sg161
g698
sg168
Nsa(dp748
g51
g209
sg161
S'_on__btn_dbg0_command'
p749
sg168
I1
sasa(dp750
g141
g687
sg51
S'_btn_dbg1'
p751
sg143
g689
sg145
(lp752
(dp753
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp754
I4382
aI5707
asg150
(lp755
sg152
(lp756
(dp757
g51
g206
sg161
S'dbg 1'
p758
sg168
Nsa(dp759
g51
g668
sg161
g698
sg168
Nsa(dp760
g51
g209
sg161
S'_on__btn_dbg1_command'
p761
sg168
I1
sasa(dp762
g141
g532
sg51
S'_btn_dev_mac'
p763
sg143
S'Button'
p764
sg145
(lp765
sg24
Nsg148
(lp766
I4066
aI9528
asg150
(lp767
sg152
(lp768
(dp769
g51
g206
sg161
S'dev mac'
p770
sg168
Nsa(dp771
g51
g668
sg161
S'disabled'
p772
sg168
Nsa(dp773
g51
g209
sg161
S'_on__btn_dev_mac_command'
p774
sg168
I1
sasa(dp775
g141
g532
sg51
S'_btn_dev_req'
p776
sg143
g764
sg145
(lp777
sg24
Nsg148
(lp778
I4674
aI9504
asg150
(lp779
sg152
(lp780
(dp781
g51
g206
sg161
S'dev req'
p782
sg168
Nsa(dp783
g51
g668
sg161
g772
sg168
Nsa(dp784
g51
g209
sg161
S'_on__btn_dev_req_command'
p785
sg168
I1
sasa(dp786
g141
g532
sg51
S'_btn_enter'
p787
sg143
g764
sg145
(lp788
sg24
Nsg148
(lp789
I3822
aI9565
asg150
(lp790
sg152
(lp791
(dp792
g51
g206
sg161
S'Enter key'
p793
sg168
Nsa(dp794
g51
g668
sg161
g772
sg168
Nsa(dp795
g51
g209
sg161
S'_on__btn_enter_command'
p796
sg168
I1
sasa(dp797
g141
g687
sg51
S'_btn_exe_at_dst_rt'
p798
sg143
g689
sg145
(lp799
sg24
Nsg148
(lp800
I4358
aI8815
asg150
(lp801
sg152
(lp802
(dp803
g51
g206
sg161
S'exe 0xXXXX at dst 0xXXXX + rt'
p804
sg168
Nsa(dp805
g51
g668
sg161
g698
sg168
Nsa(dp806
g51
g209
sg161
S'_on__btn_exe_at_dst_rt_command'
p807
sg168
I1
sasa(dp808
g141
S'Tkinter'
p809
sg51
S'_btn_lamp_wdg_0'
p810
sg143
S'Button'
p811
sg145
(lp812
sg24
Nsg148
(lp813
I414
aI9093
asg150
(lp814
sg152
(lp815
(dp816
g51
g206
sg161
S'lamp wdg 0'
p817
sg168
Nsa(dp818
g51
g668
sg161
S'disabled'
p819
sg168
Nsa(dp820
g51
g209
sg161
S'_on__btn_adf_wdg_0_command'
p821
sg168
I1
sasa(dp822
g141
S'Tkinter'
p823
sg51
S'_btn_phyipaddr'
p824
sg143
S'Button'
p825
sg145
(lp826
(dp827
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp828
I3974
aI6699
asg150
(lp829
sg152
(lp830
(dp831
g51
g206
sg161
S'phy ipaddr'
p832
sg168
Nsa(dp833
g51
g668
sg161
S'disabled'
p834
sg168
Nsa(dp835
g51
g209
sg161
S'_on__btn_phyipaddr_command'
p836
sg168
I1
sasa(dp837
g141
g823
sg51
S'_btn_ping'
p838
sg143
g825
sg145
(lp839
sg24
Nsg148
(lp840
I3956
aI6227
asg150
(lp841
sg152
(lp842
(dp843
g51
g206
sg161
S'ping'
p844
sg168
Nsa(dp845
g51
g668
sg161
g834
sg168
Nsa(dp846
g51
g209
sg161
S'_on__btn_ping_command'
p847
sg168
I1
sasa(dp848
g141
g532
sg51
S'_btn_root'
p849
sg143
g764
sg145
(lp850
(dp851
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp852
I3256
aI9553
asg150
(lp853
sg152
(lp854
(dp855
g51
g206
sg161
S'root'
p856
sg168
Nsa(dp857
g51
g668
sg161
g772
sg168
Nsa(dp858
g51
g209
sg161
S'_on__btn_root_command'
p859
sg168
I1
sasa(dp860
g141
g532
sg51
S'_btn_talnakh'
p861
sg143
g764
sg145
(lp862
sg24
Nsg148
(lp863
I3524
aI9565
asg150
(lp864
sg152
(lp865
(dp866
g51
g206
sg161
S'talnakh'
p867
sg168
Nsa(dp868
g51
g668
sg161
g772
sg168
Nsa(dp869
g51
g209
sg161
S'_on__btn_tanakh_command'
p870
sg168
I1
sasa(dp871
g141
g687
sg51
S'_entry_at_addr'
p872
sg143
S'Entry'
p873
sg145
(lp874
sg24
Nsg148
(lp875
I4090
aI8259
asg150
(lp876
sg152
(lp877
(dp878
g51
g683
sg161
S'entry_at_addr'
p879
sg168
S's.as'
p880
sasa(dp881
g141
g687
sg51
S'_entry_at_addr_exe'
p882
sg143
g873
sg145
(lp883
sg24
Nsg148
(lp884
I3834
aI8779
asg150
(lp885
sg152
(lp886
(dp887
g51
g683
sg161
S'entry_at_addr_exe'
p888
sg168
S's.as'
p889
sasa(dp890
g141
g687
sg51
S'_entry_at_addr_rt'
p891
sg143
g873
sg145
(lp892
sg24
Nsg148
(lp893
I4960
aI8815
asg150
(lp894
sg152
(lp895
(dp896
g51
g683
sg161
S'entry_at_addr_rt'
p897
sg168
S's.as'
p898
sasa(dp899
g141
g532
sg51
S'_entry_dev_mac'
p900
sg143
S'Entry'
p901
sg145
(lp902
sg24
Nsg148
(lp903
I4364
aI9541
asg150
(lp904
sg152
(lp905
(dp906
g51
g683
sg161
S'dev_mac'
p907
sg168
S's.as'
p908
sasa(dp909
g141
g552
sg51
S'_ethipaddr'
p910
sg143
S'Entry'
p911
sg145
(lp912
sg24
Nsg148
(lp913
I1844
aI5756
asg150
(lp914
sg152
(lp915
(dp916
g51
g680
sg161
g681
sg168
Nsa(dp917
g51
g683
sg161
S'ethipaddr'
p918
sg168
S's.as'
p919
sasa(dp920
g141
g552
sg51
S'_ethmacaddr'
p921
sg143
g911
sg145
(lp922
sg24
Nsg148
(lp923
I1844
aI6663
asg150
(lp924
sg152
(lp925
(dp926
g51
g680
sg161
g681
sg168
Nsa(dp927
g51
g683
sg161
S'ethmacaddr'
p928
sg168
S's.as'
p929
sasa(dp930
g141
S'Tkinter'
p931
sg51
S'_ifbw0'
p932
sg143
S'Radiobutton'
p933
sg145
(lp934
sg24
Nsg148
(lp935
I1339
aI8065
asg150
(lp936
sg152
(lp937
(dp938
g51
g166
sg161
Vifbw 0 (\u0434\u043b\u044f ADF7021)
p939
sg168
Nsa(dp940
g51
g170
sg161
S'ifbw'
p941
sg168
S'is.ai'
p942
sa(dp943
g51
g174
sg161
S'0'
sg168
Nsasa(dp944
g141
g931
sg51
S'_ifbw1'
p945
sg143
g933
sg145
(lp946
sg24
Nsg148
(lp947
I1327
aI8368
asg150
(lp948
sg152
(lp949
(dp950
g51
g166
sg161
Vifbw 1 (\u0434\u043b\u044f ADF7021-N)
p951
sg168
Nsa(dp952
g51
g170
sg161
S'ifbw'
p953
sg168
S'is.ai'
p954
sa(dp955
g51
g174
sg161
S'1'
sg168
Nsasa(dp956
g141
g823
sg51
S'_ipaddr'
p957
sg143
S'Entry'
p958
sg145
(lp959
sg24
Nsg148
(lp960
I4315
aI6227
asg150
(lp961
sg152
(lp962
(dp963
g51
g683
sg161
S'entry_ipaddr'
p964
sg168
S's.as'
p965
sasa(dp966
g141
g198
sg51
S'_label_Rcvd_Text'
p967
sg143
g495
sg145
(lp968
sg24
Nsg148
(lp969
I5192
aI4450
asg150
(lp970
sg152
(lp971
(dp972
g51
g501
sg161
V\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:
p973
sg168
Nsasa(dp974
g141
g504
sg51
S'_left'
p975
sg143
S'Button'
p976
sg145
(lp977
sg24
Nsg148
(lp978
I219
aI7533
asg150
(lp979
sg152
(lp980
(dp981
g51
g206
sg161
S'<-------(left key)--at trim left'
p982
sg168
Nsa(dp983
g51
g668
sg161
S'disabled'
p984
sg168
Nsa(dp985
g51
g209
sg161
S'_on__left_command'
p986
sg168
I1
sasa(dp987
g141
S'Tkinter'
p988
sg51
S'_ma45_treshold_patch'
p989
sg143
S'Checkbutton'
p990
sg145
(lp991
sg24
Nsg148
(lp992
I998
aI1826
asg150
(lp993
sg152
(lp994
(dp995
g51
g191
sg161
S'MA-45 patch'
p996
sg168
Nsa(dp997
g51
S'state'
p998
sg161
S'disabled'
p999
sg168
Nsa(dp1000
g51
g194
sg161
S'ma45_treshold_patch'
p1001
sg168
S'sif.ai'
p1002
sasa(dp1003
g141
g552
sg51
S'_phyipaddr'
p1004
sg143
g911
sg145
(lp1005
sg24
Nsg148
(lp1006
I1844
aI5272
asg150
(lp1007
sg152
(lp1008
(dp1009
g51
g680
sg161
g681
sg168
Nsa(dp1010
g51
g683
sg161
S'phyipaddr'
p1011
sg168
S's.as'
p1012
sasa(dp1013
g141
g552
sg51
S'_phymacaddr'
p1014
sg143
g911
sg145
(lp1015
sg24
Nsg148
(lp1016
I1856
aI6215
asg150
(lp1017
sg152
(lp1018
(dp1019
g51
g680
sg161
g681
sg168
Nsa(dp1020
g51
g683
sg161
S'phymacaddr'
p1021
sg168
S's.as'
p1022
sasa(dp1023
g141
g198
sg51
S'_prog_and_increment'
p1024
sg143
g200
sg145
(lp1025
sg24
Nsg148
(lp1026
I1887
aI3374
asg150
(lp1027
sg152
(lp1028
(dp1029
g51
g206
sg161
S'TEST RF (up key)'
p1030
sg168
Nsa(dp1031
g51
g668
sg161
S'disabled'
p1032
sg168
Nsa(dp1033
g51
g209
sg161
S'_on__prog_and_increment_command'
p1034
sg168
I1
sasa(dp1035
g141
g504
sg51
g52
sg143
g976
sg145
(lp1036
sg24
Nsg148
(lp1037
I755
aI7582
asg150
(lp1038
sg152
(lp1039
(dp1040
g51
g206
sg161
S'at trim right--(right key)------->'
p1041
sg168
Nsa(dp1042
g51
g668
sg161
g984
sg168
Nsa(dp1043
g51
g209
sg161
S'_on__right_command'
p1044
sg168
I1
sasa(dp1045
g141
g198
sg51
S'_send'
p1046
sg143
g200
sg145
(lp1047
(dp1048
g51
g242
sg161
S'x'
sasg24
Nsg148
(lp1049
I3987
aI2938
asg150
(lp1050
sg152
(lp1051
(dp1052
g51
g206
sg161
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p1053
sg168
Nsa(dp1054
g51
g668
sg161
S'disabled'
p1055
sg168
Nsa(dp1056
g51
g209
sg161
S'_on__send_command'
p1057
sg168
I1
sasa(dp1058
g141
S'Tkinter'
p1059
sg51
S'_send2'
p1060
sg143
S'Button'
p1061
sg145
(lp1062
sg24
Nsg148
(lp1063
I4705
aI2963
asg150
(lp1064
sg152
(lp1065
(dp1066
g51
g206
sg161
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p1067
sg168
Nsa(dp1068
g51
g668
sg161
S'disabled'
p1069
sg168
Nsa(dp1070
g51
g209
sg161
S'_on__send2_command'
p1071
sg168
I1
sasa(dp1072
g141
g198
sg51
S'_serialnumber'
p1073
sg143
S'Entry'
p1074
sg145
(lp1075
sg24
Nsg148
(lp1076
I1856
aI3071
asg150
(lp1077
sg152
(lp1078
(dp1079
g51
g683
sg161
S'serial_number'
p1080
sg168
S's.as'
p1081
sasa(dp1082
g141
S'Tkinter'
p1083
sg51
S'_set_ifbw'
p1084
sg143
S'Button'
p1085
sg145
(lp1086
sg24
Nsg148
(lp1087
I1795
aI8259
asg150
(lp1088
sg152
(lp1089
(dp1090
g51
g206
sg161
S'Set IFBW'
p1091
sg168
Nsa(dp1092
g51
g668
sg161
g681
sg168
Nsa(dp1093
g51
g209
sg161
S'_on__set_ifbw_command'
p1094
sg168
I1
sasa(dp1095
g141
S'Tkinter'
p1096
sg51
S'_test_adf'
p1097
sg143
S'Button'
p1098
sg145
(lp1099
sg24
Nsg148
(lp1100
I1862
aI3736
asg150
(lp1101
sg152
(lp1102
(dp1103
g51
g206
sg161
S'TEST ADF (right key)'
p1104
sg168
Nsa(dp1105
g51
g668
sg161
S'disabled'
p1106
sg168
Nsa(dp1107
g51
g209
sg161
S'_on__right_command'
p1108
sg168
I1
sasa(dp1109
g141
g198
sg51
S'_text_to_send'
p1110
sg143
g1074
sg145
(lp1111
sg24
Nsg148
(lp1112
I3987
aI2189
asg150
(lp1113
sg152
(lp1114
(dp1115
g51
g683
sg161
S'text_to_send'
p1116
sg168
S's.as'
p1117
sasa(dp1118
g141
g1059
sg51
S'_text_to_send2'
p1119
sg143
S'Entry'
p1120
sg145
(lp1121
sg24
Nsg148
(lp1122
I4680
aI2201
asg150
(lp1123
sg152
(lp1124
(dp1125
g51
g683
sg161
S'text_to_send2'
p1126
sg168
S's.as'
p1127
sasasS'BaseClass'
p1128
g54
sg34
I1
sasS'VisibleForm'
p1129
g35
sS'SelectedForm'
p1130
g35
sg51
g6
sa.