(lp1
(dp2
S'ModulePrevious'
p3
S'MA_41_Prog'
p4
sS'ModuleCurrent'
p5
S'Horizon_Prog'
p6
sS'Version'
p7
I1
sS'Geometry'
p8
S'1914x1008+-8+0'
p9
sS'ProjectName'
p10
g6
sS'ImportTypes'
p11
(lp12
(S'Pmw'
p13
S'import'
p14
tp15
a(S'Tkinter'
p16
S'from'
p17
tp18
asS'EditorWidths'
p19
((lp20
I132
aI132
a(lp21
I132
aI132
a(lp22
I130
aI130
atp23
sS'ID'
p24
S'Rapyd Project'
p25
sS'ParkingLot'
p26
(dp27
S'SelectedWidreq'
p28
NsS'Widreqs'
p29
(lp30
ssa(dp31
S'PreviousForm'
p32
S'-Main-'
p33
sS'OnTab'
p34
I1
sg33
(dp35
S'Cursor'
p36
S'192.15'
p37
sS'Text'
p38
(lp39
S''
aS'#!/usr/bin/python\n#coding=utf8\n\n'
p40
aS'import rpErrorHandler\nfrom Tkinter import *\n'
p41
aV\u000aconnected=0\u000aCOMtimeout=30\u000astop_reading_COM=0\u000atrim=7\u000a\u000adef lamp_wdg_0():\u000a    write_ram_eep('lamp wdg 0')\u000a    write_ram_eep('at thr gas 1')    \u000a    write_ram_eep('at thr alm 5')    \u000a\u000adef read_string_from_serial():\u000a    char = '*'\u000a    string=""\u000a    while (char<>'') and (char <> '\u005cr'):\u000a        char=ser.read()\u000a        string=string+char\u000a        if char=='\u005cr':\u000a            string=string+'\u005cn'     \u000a        if (char=='') and (string<>""):         \u000a            string=string+'\u005cn'\u000a    return string\u000a\u000adef read_and_print(disable_stop):\u000a    string=''\u000a    if stop_reading_COM==1 and disable_stop==0: return ''\u000a    global connected\u000a    if connected==1: \u000a        string=read_string_from_serial()\u000a        if string<>"":\u000a            App._ReceivedText.insert('1.0', string)\u000a            if 'Mar 25 2020'  in string:  \u000a                App._ReceivedText.insert('1.0', '**********************************************************\u005cn')\u000a                App._ReceivedText.insert('1.0', '***************\u041f\u0415\u0420\u0415\u041f\u0420\u041e\u0428\u0418\u0422\u042c!!!!!!*****************\u005cn')                \u000a                App._ReceivedText.insert('1.0', '**********************************************************\u005cn')                \u000a    return string\u000a            \u000adef verify(string,value,type):\u000a    if type=='ataddr':\u000a        if string.upper().find(("0X"+str(hex(numh()*256+numl()))[2:].zfill(4)).upper())==-1: return 0\u000a    if type=='ipaddr':\u000a        if string.find(value)==-1: return 0\u000a    if type=='macaddr':\u000a        if string.find(value[:12]+str(hex(numh())[2:]).upper().zfill(2)+':'+str(hex(numl())[2:]).upper().zfill(2))==-1: return 0\u000a        \u000a    return 1\u000a        \u000a\u000a\u000adef write_and_verify(param,value,type):\u000a    if value=='': return 1 #1-ok, 0-not ok\u000a    global stop_reading_COM\u000a    stop_reading_COM=1        \u000a\u000a    write_eep(param+' '+value)\u000a    string=write_eep(param)      \u000a\u000a    if verify(string,value,type)==0:\u000a        stop_reading_COM=0\u000a        return 0\u000a        \u000a    stop_reading_COM=0\u000a    return 1\u000a    \u000a    \u000adef loopproc():             \u000a     read_and_print(0)\u000a     setup_ip_mac_etc() \u000a     Root.after(COMtimeout,loopproc) \u000a\u000adef write_ram(string):\u000a    read_and_print(1)\u000a    ser.write(string+'\u005cr') \u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_eep(string):\u000a    read_and_print(1)\u000a    ser.write('eeprom '+string+'\u005cr')\u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_ram_eep(string):      \u000a    write_eep(string)\u000a    write_ram(string)\u000a    \u000a    \u000adef numh():\u000a    return int(math.floor(int(App.serial_number.get())/1000))\u000a   \u000adef numl():\u000a    return int(int(App.serial_number.get()) % 1000)\u000a\u000adef setup_ip_mac_etc():  \u000a\u000a    if App.serial_number.get()=='':return\u000a\u000a    try:\u000a        int(App.serial_number.get())\u000a    except:\u000a        App.serial_number.set('')\u000a        mbox.showerror('\u041e\u0448\u0438\u0431\u043a\u0430','\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b!')\u000a        return\u000a        \u000a        \u000a\u000a    if App.device.get()=='ma41' or App.device.get()=='ma45':    \u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lsr4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lse4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:14:'+hex(numh())[2:]+':'+hex(numl())[2:]) \u000a\u000a    if App.device.get()=='1m500':            \u000a        App.ataddr.set('')\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:14:'+hex(numh())[2:]+':'+hex(numl())[2:])          \u000a        \u000a    if App.device.get()=='ma45': \u000a        App._ma45_treshold_patch.config(state="normal")\u000a    else:   \u000a        App._ma45_treshold_patch.config(state="disabled")\u000a\u000atry:\u000a    #--------------------------------------------------------------------------#\u000a    # User code should go after this comment so it is inside the "try".        #\u000a    #     This allows rpErrorHandler to gain control on an error so it         #\u000a    #     can properly display a Rapyd-aware error message.                    #\u000a    #--------------------------------------------------------------------------#\u000a\u000a    #Adjust sys.path so we can find other modules of this project\u000a   \u000a   \u000a\u000a    \u000a    \u000a    \u000a    if '.' not in sys.path:\u000a        sys.path.append('.')\u000a    #Put lines to import other modules of this project here\u000a \u000a    import sys\u000a    \u000a    import serial\u000a    import msvcrt\u000a    import time\u000a    import math\u000a    import tkMessageBox as mbox\u000a \u000a \u000a    \u000a    if __name__ == '__main__':\u000a
p42
aS"        Root = Tk()\n        import Tkinter\n        Tkinter.CallWrapper = rpErrorHandler.CallWrapper\n        del Tkinter\n        App = Horizon_Prog(Root)\n        App.pack(expand='yes',fill='both')\n"
p43
aS"        Root.geometry('1000x860+10+10')\n        Root.title('Horizon programming')\n\n        \n        Root.after(COMtimeout,loopproc)\n        \n        def left_key(event): \n            if connected==1:\n                App._on__left_command()\n            \n        def right_key(event):\n            if connected==1:\n                 App._on__right_command()            \n\n        def up_key(event):\n                if connected==1:\n                   App._on__prog_and_increment_command()    \n                   \n        def down_key(event):\n                if connected==1:\n                   App._on__Retry_command()                                \n        \n        Root.bind('<Left>', left_key)\n        Root.bind('<Right>', right_key)\n        Root.bind('<Up>', up_key)\n        Root.bind('<Down>', down_key)\n\n        \n        Root.mainloop()\n    #--------------------------------------------------------------------------#\n    # User code should go above this comment.                                  #\n    #--------------------------------------------------------------------------#\nexcept:\n    rpErrorHandler.RunError()"
p44
asg7
I0
sS'Sha'
p45
I7610239
ssS'Forms'
p46
(lp47
(dp48
S'Requested'
p49
S'Gui'
p50
sS'Name'
p51
S'Horizon_Prog'
p52
sg28
g52
sS'Type'
p53
S'Tkinter.Frame'
p54
sS'Lines'
p55
(lp56
(lp57
I9854
aI4994
aI1
aa(lp58
I2520
aI4994
aI1
aa(lp59
I1260
aI7884
aI0
aa(lp60
I1260
aI7255
aI0
aa(lp61
I1260
aI6941
aI0
aa(lp62
I1260
aI8779
aI0
aa(lp63
I1260
aI2817
aI0
aa(lp64
I1260
aI2044
aI0
aa(lp65
I1260
aI1729
aI0
aa(lp66
I1260
aI1439
aI0
aa(lp67
I1260
aI1125
aI0
aa(lp68
I475
aI7570
aI1
aa(lp69
I1284
aI7570
aI1
aa(lp70
I1582
aI8331
aI1
aa(lp71
I6184
aI5502
aI0
aa(lp72
I6184
aI6505
aI0
aa(lp73
I6184
aI8561
aI0
aa(lp74
I6184
aI9069
aI0
aa(lp75
I6184
aI6892
aI0
aa(lp76
I6184
aI7388
aI0
aa(lp77
I6184
aI9335
aI0
aa(lp78
I6184
aI5985
aI0
aa(lp79
I6184
aI4135
aI0
aa(lp80
I6184
aI1729
aI0
aa(lp81
I4425
aI2926
aI1
aasg38
(dp82
g36
S'440.25'
p83
sg38
(lp84
S'#------------------------------------------------------------------------------#\n#                                                                              #\n#                                 Horizon_Prog                                 #\n#                                                                              #\n#------------------------------------------------------------------------------#\nclass Horizon_Prog(Frame):\n    def __init__(self,Master=None,*pos,**kw):\n'
p85
aS'        #\n        #Your code here\n        #    \n'
p86
aV\u000a        apply(Frame.__init__,(self,Master),kw)\u000a        self.device = StringVar()\u000a        self.ataddr = StringVar()\u000a        self.entry_at_addr = StringVar()\u000a        self.entry_at_addr_exe = StringVar()\u000a        self.entry_at_addr_rt = StringVar()\u000a        self.dev_mac = StringVar()\u000a        self.ethipaddr = StringVar()\u000a        self.ethmacaddr = StringVar()\u000a        self.ifbw = IntVar()\u000a        self.entry_ipaddr = StringVar()\u000a        self.ma45_treshold_patch = IntVar()\u000a        self.phyipaddr = StringVar()\u000a        self.phymacaddr = StringVar()\u000a        self.serial_number = StringVar()\u000a        self.text_to_send = StringVar()\u000a        self.text_to_send2 = StringVar()\u000a        self._Frame2 = Frame(self)\u000a        self._Frame2.pack(fill='y',side='left')\u000a        self._Frame4 = Frame(self,background='#dbdbdb')\u000a        self._Frame4.pack(fill='y',side='left')\u000a        self._Frame3 = Frame(self)\u000a        self._Frame3.pack(side='left')\u000a        self._Frame27 = Frame(self._Frame2)\u000a        self._Frame27.pack(side='top')\u000a        self._Label1 = Label(self._Frame27,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 COM-\u043f\u043e\u0440\u0442')\u000a        self._Label1.pack(side='top')\u000a        self._ComPortsList = Listbox(self._Frame27,selectmode='single')\u000a        self._ComPortsList.pack(side='top')\u000a        self._COM_port_connect = Button(self._Frame27\u000a            ,command=self._on__COM_port_connect_command,text='\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442')\u000a        self._COM_port_connect.pack(side='bottom')\u000a        self._Frame26 = Frame(self._Frame2)\u000a        self._Frame26.pack(fill='x',side='top')\u000a        self._Label3 = Label(self._Frame26,justify='left'\u000a            ,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:')\u000a        self._Label3.pack(anchor='w',side='left')\u000a        self._Frame7 = Frame(self._Frame2)\u000a        self._Frame7.pack(fill='x',side='top')\u000a        self._MA41 = Radiobutton(self._Frame7,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41',value='ma41'\u000a            ,variable=self.device)\u000a        self._MA41.pack(anchor='w',side='left')\u000a        self._Frame11 = Frame(self._Frame2)\u000a        self._Frame11.pack(fill='x',side='top')\u000a        self._MA45 = Radiobutton(self._Frame11,command=self._set_serial\u000a            ,text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45',value='ma45',variable=self.device)\u000a        self._MA45.pack(side='left')\u000a        self._ma45_treshold_patch = Checkbutton(self._Frame11,state='disabled'\u000a            ,text='MA-45 patch',variable=self.ma45_treshold_patch)\u000a        self._ma45_treshold_patch.pack(side='left')\u000a        self._Frame12 = Frame(self._Frame2)\u000a        self._Frame12.pack(fill='x',side='top')\u000a        self._LSR4 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204',value='lsr4'\u000a            ,variable=self.device)\u000a        self._LSR4.pack(anchor='w',side='top')\u000a        self._LSE4 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154',value='lse4'\u000a            ,variable=self.device)\u000a        self._LSE4.pack(anchor='w',side='top')\u000a        self._1M500 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500',value='1m500'\u000a            ,variable=self.device)\u000a        self._1M500.pack(anchor='w',side='top')\u000a        self._Frame6 = Frame(self._Frame2)\u000a        self._Frame6.pack(side='top')\u000a        self._Label2 = Label(self._Frame6,text='\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:')\u000a        self._Label2.pack(side='top')\u000a        self._serialnumber = Entry(self._Frame6,textvariable=self.serial_number)\u000a        self._serialnumber.pack(side='top')\u000a        self._prog_and_increment = Button(self._Frame6\u000a            ,command=self._on__prog_and_increment_command,state='disabled'\u000a            ,text='TEST RF (up key)')\u000a        self._prog_and_increment.pack(side='top')\u000a        self._test_adf = Button(self._Frame6,command=self._on__right_command\u000a            ,state='disabled',text='TEST ADF (right key)')\u000a        self._test_adf.pack(side='top')\u000a        self._Retry = Button(self._Frame6,command=self._on__Retry_command\u000a            ,state='disabled',text='Retry (down key)')\u000a        self._Retry.pack(side='top')\u000a        self._ethmacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethmacaddr)\u000a        self._ethmacaddr.pack(side='bottom')\u000a        self._Label8 = Label(self._Frame6,text='eth macaddr:')\u000a        self._Label8.pack(side='bottom')\u000a        self._phymacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phymacaddr)\u000a        self._phymacaddr.pack(side='bottom')\u000a        self._Label7 = Label(self._Frame6,text='phy macaddr:')\u000a        self._Label7.pack(side='bottom')\u000a        self._ethipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethipaddr)\u000a        self._ethipaddr.pack(side='bottom')\u000a        self._Label6 = Label(self._Frame6,text='eth ipaddr:')\u000a        self._Label6.pack(side='bottom')\u000a        self._phyipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phyipaddr)\u000a        self._phyipaddr.pack(side='bottom')\u000a        self._Label5 = Label(self._Frame6,text='phy ipaddr:')\u000a        self._Label5.pack(side='bottom')\u000a        self._ataddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ataddr)\u000a        self._ataddr.pack(side='bottom')\u000a        self._Label9 = Label(self._Frame6,text='at addr')\u000a        self._Label9.pack(side='bottom')\u000a        self._Frame1 = Frame(self._Frame2)\u000a        self._Frame1.pack(side='top')\u000a        self._Label10 = Label(self._Frame1,text='at frequency trim:')\u000a        self._Label10.pack(side='top')\u000a        self._Frame10 = Frame(self._Frame2)\u000a        self._Frame10.pack(side='top')\u000a        self._Frame23 = Frame(self._Frame2,background='#c0c0c0',borderwidth='10')\u000a        self._Frame23.pack(side='top')\u000a        self._Frame22 = Frame(self._Frame2)\u000a        self._Frame22.pack(side='top')\u000a        self._btn_lamp_wdg_0 = Button(self._Frame22\u000a            ,command=self._on__btn_adf_wdg_0_command,state='disabled'\u000a            ,text='lamp wdg 0')\u000a        self._btn_lamp_wdg_0.pack(side='left')\u000a        self._Frame29 = Frame(self._Frame4)\u000a        self._Frame29.pack(side='top')\u000a        self._Label4 = Label(self._Frame29,text='\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:')\u000a        self._Label4.pack(side='bottom')\u000a        self._Frame19 = Frame(self._Frame4)\u000a        self._Frame19.pack(side='top')\u000a        self._Frame14 = Frame(self._Frame4)\u000a        self._Frame14.pack(side='top')\u000a        self._label_Rcvd_Text = Label(self._Frame14\u000a            ,text='\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:')\u000a        self._label_Rcvd_Text.pack(side='top')\u000a        self._ReceivedText = Text(self._Frame14\u000a            ,font=('@Arial Unicode MS', 10, ''),height='35')\u000a        self._ReceivedText.pack(side='top')\u000a        self._Frame9 = Frame(self._Frame4)\u000a        self._Frame9.pack(fill='x',side='top')\u000a        self._btn_dbg0 = Button(self._Frame9,command=self._on__btn_dbg0_command\u000a            ,state='disabled',text='dbg 0')\u000a        self._btn_dbg0.pack(anchor='w',side='left')\u000a        self._btn_dbg1 = Button(self._Frame9,command=self._on__btn_dbg1_command\u000a            ,state='disabled',text='dbg 1')\u000a        self._btn_dbg1.pack(anchor='w',side='left')\u000a        self._Frame28 = Frame(self._Frame4)\u000a        self._Frame28.pack(fill='x',side='top')\u000a        self._btn_ping = Button(self._Frame28,command=self._on__btn_ping_command\u000a            ,state='disabled',text='ping')\u000a        self._btn_ping.pack(side='left')\u000a        self._ipaddr = Entry(self._Frame28,textvariable=self.entry_ipaddr)\u000a        self._ipaddr.pack(side='left')\u000a        self._Frame15 = Frame(self._Frame4)\u000a        self._Frame15.pack(fill='x',side='top')\u000a        self._btn_phyipaddr = Button(self._Frame15\u000a            ,command=self._on__btn_phyipaddr_command,state='disabled'\u000a            ,text='phy ipaddr')\u000a        self._btn_phyipaddr.pack(anchor='w',side='left')\u000a        self._btn_ataddr = Button(self._Frame15\u000a            ,command=self._on__btn_ataddr_command,state='disabled'\u000a            ,text='at addr')\u000a        self._btn_ataddr.pack(side='left')\u000a        self._Frame18 = Frame(self._Frame4)\u000a        self._Frame18.pack(fill='x',side='top')\u000a        self._btn_adf_tst = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_command,state='disabled'\u000a            ,text='adf tst')\u000a        self._btn_adf_tst.pack(anchor='w',side='left')\u000a        self._btn_adf_tst_50 = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_50_command,state='disabled'\u000a            ,text='adf tst 50')\u000a        self._btn_adf_tst_50.pack(anchor='w',side='left')\u000a        self._Frame16 = Frame(self._Frame4)\u000a        self._Frame16.pack(fill='x',side='top')\u000a        self._btn_at_dst_rt = Button(self._Frame16\u000a            ,command=self._on__btn_at_dst_rt_command,state='disabled'\u000a            ,text='at dst 0xXXXX + rt')\u000a        self._btn_at_dst_rt.pack(anchor='w',side='left')\u000a        self._entry_at_addr = Entry(self._Frame16\u000a            ,textvariable=self.entry_at_addr)\u000a        self._entry_at_addr.pack(side='left')\u000a        self._Frame17 = Frame(self._Frame4)\u000a        self._Frame17.pack(fill='x',side='top')\u000a        self._Label11 = Label(self._Frame17,text='\u041b\u0421-\u04204:')\u000a        self._Label11.pack(side='left')\u000a        self._entry_at_addr_exe = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_exe)\u000a        self._entry_at_addr_exe.pack(side='left')\u000a        self._btn_exe_at_dst_rt = Button(self._Frame17\u000a            ,command=self._on__btn_exe_at_dst_rt_command,state='disabled'\u000a            ,text='exe 0xXXXX at dst 0xXXXX + rt')\u000a        self._btn_exe_at_dst_rt.pack(side='left')\u000a        self._Label12 = Label(self._Frame17,text='\u041c\u0410:')\u000a        self._Label12.pack(side='left')\u000a        self._entry_at_addr_rt = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_rt)\u000a        self._entry_at_addr_rt.pack(side='left')\u000a        self._Frame20 = Frame(self._Frame4)\u000a        self._Frame20.pack(fill='x',side='top')\u000a        self._Label13 = Label(self._Frame20,text='\u0414\u043b\u044f \u043a\u0430\u0441\u0441\u0435\u0442\u044b 1-\u041c-5:')\u000a        self._Label13.pack(side='left')\u000a        self._Frame21 = Frame(self._Frame4)\u000a        self._Frame21.pack(fill='x',side='top')\u000a        self._btn_root = Button(self._Frame21,command=self._on__btn_root_command\u000a            ,state='disabled',text='root')\u000a        self._btn_root.pack(anchor='w',side='left')\u000a        self._btn_talnakh = Button(self._Frame21\u000a            ,command=self._on__btn_tanakh_command,state='disabled'\u000a            ,text='talnakh')\u000a        self._btn_talnakh.pack(side='left')\u000a        self._btn_enter = Button(self._Frame21\u000a            ,command=self._on__btn_enter_command,state='disabled'\u000a            ,text='Enter key')\u000a        self._btn_enter.pack(side='left')\u000a        self._btn_dev_mac = Button(self._Frame21\u000a            ,command=self._on__btn_dev_mac_command,state='disabled'\u000a            ,text='dev mac')\u000a        self._btn_dev_mac.pack(side='left')\u000a        self._entry_dev_mac = Entry(self._Frame21,textvariable=self.dev_mac)\u000a        self._entry_dev_mac.pack(side='left')\u000a        self._btn_dev_req = Button(self._Frame21\u000a            ,command=self._on__btn_dev_req_command,state='disabled'\u000a            ,text='dev req')\u000a        self._btn_dev_req.pack(side='left')\u000a        self._Frame5 = Frame(self._Frame10)\u000a        self._Frame5.pack(side='left')\u000a        self._left = Button(self._Frame5,command=self._on__left_command\u000a            ,state='disabled',text='<-------(left key)--at trim left')\u000a        self._left.pack(side='left')\u000a        self._Frame13 = Frame(self._Frame10)\u000a        self._Frame13.pack(side='left')\u000a        self._right = Button(self._Frame13,command=self._on__right_command\u000a            ,state='disabled',text='at trim right--(right key)------->')\u000a        self._right.pack(side='left')\u000a        self._Frame8 = Frame(self._Frame10)\u000a        self._Frame8.pack(side='left')\u000a        self._Frame25 = Frame(self._Frame23)\u000a        self._Frame25.pack(side='left')\u000a        self._ifbw0 = Radiobutton(self._Frame25,text='ifbw 0 (\u0434\u043b\u044f ADF7021)'\u000a            ,value=0,variable=self.ifbw)\u000a        self._ifbw0.pack(side='top')\u000a        self._ifbw1 = Radiobutton(self._Frame25,text='ifbw 1 (\u0434\u043b\u044f ADF7021-N)'\u000a            ,value=1,variable=self.ifbw)\u000a        self._ifbw1.pack(side='top')\u000a        self._Frame24 = Frame(self._Frame23)\u000a        self._Frame24.pack(side='left')\u000a        self._set_ifbw = Button(self._Frame24,command=self._on__set_ifbw_command\u000a            ,state='disabled',text='Set IFBW')\u000a        self._set_ifbw.pack(side='left')\u000a        self._Frame31 = Frame(self._Frame19)\u000a        self._Frame31.pack(expand='yes',fill='x',side='left')\u000a        self._text_to_send = Entry(self._Frame31,textvariable=self.text_to_send)\u000a        self._text_to_send.pack(side='top')\u000a        self._send = Button(self._Frame31,command=self._on__send_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send.pack(fill='x',side='top')\u000a        self._Frame30 = Frame(self._Frame19)\u000a        self._Frame30.pack(expand='yes',fill='x',side='left')\u000a        self._text_to_send2 = Entry(self._Frame30\u000a            ,textvariable=self.text_to_send2)\u000a        self._text_to_send2.pack(side='top')\u000a        self._send2 = Button(self._Frame30,command=self._on__send2_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send2.pack(side='top')\u000a
p87
aV        #\u000a        #Your code here\u000a        #\u000a        \u000a        found = False\u000a \u000a        for i in range(5,64) :\u000a            try :\u000a                port = "COM"+str(i)\u000a                ser = serial.Serial(port)\u000a                ser.close()\u000a                self._ComPortsList.insert(0, port)\u000a                found = True\u000a            except serial.serialutil.SerialException :\u000a                pass\u000a \u000a        if not found :\u000a            mbox.showerror("\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0440\u0442\u043e\u0432 \u043d\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e")\u000a        \u000a\u000a            \u000a\u000a        \u000a        self.device.set('ma41')\u000a        self.serial_number.set('16001')\u000a        self.ifbw.set(0)\u000a        \u000a\u000a        self.text_to_send.set(str("exe 0x0003 sys info"))\u000a        self.text_to_send2.set(str("exe 7 exe 2 sys info"))\u000a        \u000a        self.entry_ipaddr.set('10.2.1.20')\u000a        self.entry_at_addr.set('0x0007')\u000a        self.entry_at_addr_exe.set('0x202')\u000a        self.entry_at_addr_rt.set('0x104d')\u000a        self.dev_mac.set('12345')\u000a        self.ma45_treshold_patch.set(1)\u000a        \u000a
p88
aS'    #\n    #Start of event handler methods\n    #\n'
p89
aS'\n'
aS'\n    def _on__COM_port_connect_command(self'
p90
aV,Event=None):\u000a        global connected\u000a        try:\u000a            global ser                      \u000a            ser = serial.Serial(self._ComPortsList.get(self._ComPortsList.curselection()),timeout=0.02)\u000a            ser.baudrate = 115200\u000a            connected=1\u000a            self._COM_port_connect.config(state='disabled')\u000a            self._prog_and_increment.config(state="normal")\u000a            self._test_adf.config(state="normal")\u000a            self._send.config(state="normal")\u000a            self._send2.config(state="normal")\u000a            self._set_ifbw.config(state="normal")\u000a            self._prog_and_increment.config(state="normal")\u000a            self._left.config(state="normal")\u000a            self._right.config(state="normal")\u000a            self._btn_ping.config(state="normal")\u000a            self._btn_phyipaddr.config(state="normal")\u000a            self._btn_ataddr.config(state="normal")\u000a            self._btn_adf_tst.config(state="normal")            \u000a            self._btn_adf_tst_50.config(state="normal")            \u000a            self._btn_dbg0.config(state="normal")\u000a            self._btn_dbg1.config(state="normal")\u000a            self._btn_at_dst_rt.config(state="normal")\u000a            self._btn_exe_at_dst_rt.config(state="normal")\u000a            self._btn_root.config(state="normal")\u000a            self._btn_talnakh.config(state="normal")\u000a            self._btn_enter.config(state="normal")           \u000a            self._btn_dev_mac.config(state="normal")\u000a            self._btn_dev_req.config(state="normal")            \u000a            self._btn_lamp_wdg_0.config(state="normal")\u000a            self._Retry.config(state="normal")\u000a        except:            \u000a            connected=0\u000a            mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430", "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442")  \u000a            \u000a        \u000a\u000a\u000a
p91
aS'\n    def _on__Retry_command(self'
p92
aS",Event=None): #retry (down key)\n        setup_ip_mac_etc()\n        ok=1\n        \n        self.serial_number.set(str(int(self.serial_number.get())-1))\n        if int(self.serial_number.get())%1000<=0:\n            self.serial_number.set(int(self.serial_number.get())-746)          \n        setup_ip_mac_etc()\n        \n        write_ram('exe '+self.ataddr.get()+' sys info');\n        ok=1\n        \n        \n        \n        pass\n"
p93
aS'\n    def _on__btn_adf_tst_50_command(self'
p94
aS",Event=None):\n        write_ram('adf tst 50')\n"
p95
aS'\n    def _on__btn_adf_tst_command(self'
p96
aS",Event=None):\n        write_ram('adf tst')\n"
p97
aS'\n    def _on__btn_adf_wdg_0_command(self'
p98
aS',Event=None):\n        lamp_wdg_0()\n'
p99
aS'\n    def _on__btn_at_dst_rt_command(self'
p100
aS",Event=None):\n        write_ram('at dst '+str(self.entry_at_addr.get()))\n        write_ram('rt')\n"
p101
aS'\n    def _on__btn_ataddr_command(self'
p102
aS",Event=None):\n        write_ram('at addr')\n"
p103
aS'\n    def _on__btn_dbg0_command(self'
p104
aS",Event=None):\n        write_ram('dbg 0')\n"
p105
aS'\n    def _on__btn_dbg1_command(self'
p106
aS",Event=None):\n        write_ram('dbg 1')\n"
p107
aS'\n    def _on__btn_dev_mac_command(self'
p108
aS",Event=None):\n        write_ram('dev mac '+str(self.dev_mac.get()))\n"
p109
aS'\n    def _on__btn_dev_req_command(self'
p110
aS",Event=None):\n        write_ram('dev req')\n"
p111
aS'\n    def _on__btn_enter_command(self'
p112
aS",Event=None):\n        write_ram('')\n"
p113
aS'\n    def _on__btn_exe_at_dst_rt_command(self'
p114
aS",Event=None):\n        write_ram('exe '+self.entry_at_addr_exe.get()+' at dst '+self.entry_at_addr_rt.get())\n        write_ram('exe '+self.entry_at_addr_exe.get()+' rt')\n"
p115
aS'\n    def _on__btn_phyipaddr_command(self'
p116
aS",Event=None):\n        write_ram('phy ipaddr')\n"
p117
aS'\n    def _on__btn_ping_command(self'
p118
aS",Event=None):\n        write_ram('ping '+str(self.entry_ipaddr.get()))\n"
p119
aS'\n    def _on__btn_root_command(self'
p120
aS",Event=None):\n        write_ram('root')\n"
p121
aS'\n    def _on__btn_tanakh_command(self'
p122
aS",Event=None):\n        write_ram('talnakh')\n"
p123
aS'\n    def _on__left_command(self'
p124
aS',Event=None):\n        global trim\n        if trim <15:\n            trim+=1\n        write_ram_eep("at trim "+str(trim)+\'\\r\')\n'
p125
aS'\n    def _on__prog_and_increment_command(self'
p126
aS",Event=None): #test and inc (up key)\n        setup_ip_mac_etc()\n        ok=1\n        \n        write_ram('exe '+self.ataddr.get()+' sys info');\n        ok=1\n        \n        if ok==1:\n            self.serial_number.set(str(int(self.serial_number.get())+1))\n            if int(self.serial_number.get())%1000>=255:\n               self.serial_number.set(int(self.serial_number.get())+746)\n    \n        \n"
p127
aS'\n    def _on__right_command(self'
p128
aS",Event=None):\n      setup_ip_mac_etc()        \n      write_ram('exe '+self.ataddr.get()+' adf tst 50');        \n"
p129
aS'\n    def _on__send2_command(self'
p130
aS",Event=None):\n        ser.write(self._text_to_send2.get()+'\\r')\n"
p131
aS'\n    def _on__send_command(self'
p132
aS",Event=None):\n        ser.write(self._text_to_send.get()+'\\r')\n        \n\n"
p133
aS'\n    def _on__set_ifbw_command(self'
p134
aS",Event=None):        \n        write_ram_eep('adf ifbw '+str(self.ifbw.get()))\n        \n\n"
p135
aS'\n    def _set_serial(self'
p136
aS",Event=None):\n        if self.device.get()=='ma41':\n            self.serial_number.set('16001')\n            \n        if self.device.get()=='ma45':\n            self.serial_number.set('16001')         \n\n        if self.device.get()=='lsr4':\n            self.serial_number.set('1008')\n\n        if self.device.get()=='lse4':\n            self.serial_number.set('1008')\n      \n        if self.device.get()=='1m500':\n            self.serial_number.set('1008')\n            \n        setup_ip_mac_etc()\n\n\n      \n"
p137
aS'    #\n    #Start of non-Rapyd user code\n    #\n'
p138
aS''
asg7
I0
sg45
I10282623
ssg29
(lp139
(dp140
S'ModuleName'
p141
S'Tkinter'
p142
sg51
g52
sS'WidgetName'
p143
S'Frame'
p144
sS'PackOptions'
p145
(lp146
sg24
(I0
tp147
sS'XY'
p148
(I0
I0
tp149
sS'Bindings'
p150
(lp151
sS'Options'
p152
(lp153
sa(dp154
g141
S'Tkinter'
p155
sg51
S'_1M500'
p156
sg143
S'Radiobutton'
p157
sg145
(lp158
(dp159
g51
S'anchor'
p160
sS'Value'
p161
S'w'
sasg24
Nsg148
(lp162
I1850
aI2600
asg150
(lp163
sg152
(lp164
(dp165
g51
S'text'
p166
sg161
V\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500
p167
sS'Extra'
p168
Nsa(dp169
g51
S'variable'
p170
sg161
S'device'
p171
sg168
S'is.as'
p172
sa(dp173
g51
S'value'
p174
sg161
S'1m500'
p175
sg168
Nsa(dp176
g51
S'command'
p177
sg161
S'_set_serial'
p178
sg168
I1
sa(dp179
g51
S'justify'
p180
sg161
S'left'
p181
sg168
Nsasa(dp182
g141
S'Tkinter'
p183
sg51
S'_COM_port_connect'
p184
sg143
S'Button'
p185
sg145
(lp186
sg24
Nsg148
(lp187
I1862
aI931
asg150
(lp188
sg152
(lp189
(dp190
g51
S'text'
p191
sg161
V\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442
p192
sg168
Nsa(dp193
g51
S'command'
p194
sg161
S'_on__COM_port_connect_command'
p195
sg168
I1
sasa(dp196
g141
S'Tkinter'
p197
sg51
S'_ComPortsList'
p198
sg143
S'Listbox'
p199
sg145
(lp200
sg24
Nsg148
(lp201
I1850
aI593
asg150
(lp202
sg152
(lp203
(dp204
g51
S'selectmode'
p205
sg161
S'single'
p206
sg168
Nsasa(dp207
g141
S'Tkinter'
p208
sg51
S'_Frame1'
p209
sg143
S'Frame'
p210
sg145
(lp211
sg24
(I0
I0
I6
tp212
sg148
g149
sg150
(lp213
sg152
(lp214
sa(dp215
g141
g208
sg51
S'_Frame10'
p216
sg143
g210
sg145
(lp217
sg24
(I0
I0
I7
tp218
sg148
g149
sg150
(lp219
sg152
(lp220
sa(dp221
g141
S'Tkinter'
p222
sg51
S'_Frame11'
p223
sg143
S'Frame'
p224
sg145
(lp225
(dp226
g51
S'fill'
p227
sg161
S'x'
sasg24
(I0
I0
I3
tp228
sg148
g149
sg150
(lp229
sg152
(lp230
sa(dp231
g141
S'Tkinter'
p232
sg51
S'_Frame12'
p233
sg143
S'Frame'
p234
sg145
(lp235
(dp236
g51
g227
sg161
S'x'
sasg24
(I0
I0
I4
tp237
sg148
g149
sg150
(lp238
sg152
(lp239
sa(dp240
g141
g208
sg51
S'_Frame13'
p241
sg143
g210
sg145
(lp242
sg24
(I0
I0
I7
I1
tp243
sg148
g149
sg150
(lp244
sg152
(lp245
sa(dp246
g141
S'Tkinter'
p247
sg51
S'_Frame14'
p248
sg143
S'Frame'
p249
sg145
(lp250
sg24
(I0
I1
I2
tp251
sg148
g149
sg150
(lp252
sg152
(lp253
sa(dp254
g141
g247
sg51
S'_Frame15'
p255
sg143
g249
sg145
(lp256
(dp257
g51
g227
sg161
S'x'
sasg24
(I0
I1
I5
tp258
sg148
g149
sg150
(lp259
sg152
(lp260
sa(dp261
g141
S'Tkinter'
p262
sg51
S'_Frame16'
p263
sg143
S'Frame'
p264
sg145
(lp265
(dp266
g51
g227
sg161
S'x'
sasg24
(I0
I1
I7
tp267
sg148
g149
sg150
(lp268
sg152
(lp269
sa(dp270
g141
g262
sg51
S'_Frame17'
p271
sg143
g264
sg145
(lp272
(dp273
g51
g227
sg161
S'x'
sasg24
(I0
I1
I8
tp274
sg148
g149
sg150
(lp275
sg152
(lp276
sa(dp277
g141
g262
sg51
S'_Frame18'
p278
sg143
g264
sg145
(lp279
(dp280
g51
g227
sg161
S'x'
sasg24
(I0
I1
I6
tp281
sg148
g149
sg150
(lp282
sg152
(lp283
sa(dp284
g141
S'Tkinter'
p285
sg51
S'_Frame19'
p286
sg143
S'Frame'
p287
sg145
(lp288
sg24
(I0
I1
I1
tp289
sg148
g149
sg150
(lp290
sg152
(lp291
sa(dp292
g141
S'Tkinter'
p293
sg51
S'_Frame2'
p294
sg143
S'Frame'
p295
sg145
(lp296
(dp297
g51
g227
sg161
S'y'
sasg24
(I0
I0
tp298
sg148
g149
sg150
(lp299
sg152
(lp300
sa(dp301
g141
g262
sg51
S'_Frame20'
p302
sg143
g264
sg145
(lp303
(dp304
g51
g227
sg161
S'x'
sasg24
(I0
I1
I9
tp305
sg148
g149
sg150
(lp306
sg152
(lp307
sa(dp308
g141
S'Tkinter'
p309
sg51
S'_Frame21'
p310
sg143
S'Frame'
p311
sg145
(lp312
(dp313
g51
g227
sg161
S'x'
sasg24
(I0
I1
I10
tp314
sg148
g149
sg150
(lp315
sg152
(lp316
sa(dp317
g141
S'Tkinter'
p318
sg51
S'_Frame22'
p319
sg143
S'Frame'
p320
sg145
(lp321
sg24
(I0
I0
I9
tp322
sg148
g149
sg150
(lp323
sg152
(lp324
sa(dp325
g141
g318
sg51
S'_Frame23'
p326
sg143
g320
sg145
(lp327
sg24
(I0
I0
I8
tp328
sg148
g149
sg150
(lp329
sg152
(lp330
(dp331
g51
S'borderwidth'
p332
sg161
S'n:10'
p333
sg168
Nsa(dp334
g51
S'background'
p335
sg161
S'c:#c0c0c0'
p336
sg168
Nsasa(dp337
g141
g318
sg51
S'_Frame24'
p338
sg143
g320
sg145
(lp339
sg24
(I0
I0
I8
I1
tp340
sg148
g149
sg150
(lp341
sg152
(lp342
sa(dp343
g141
g318
sg51
S'_Frame25'
p344
sg143
g320
sg145
(lp345
sg24
(I0
I0
I8
I0
tp346
sg148
g149
sg150
(lp347
sg152
(lp348
sa(dp349
g141
g232
sg51
S'_Frame26'
p350
sg143
g234
sg145
(lp351
(dp352
g51
g227
sg161
S'x'
sasg24
(I0
I0
I1
tp353
sg148
g149
sg150
(lp354
sg152
(lp355
sa(dp356
g141
g232
sg51
S'_Frame27'
p357
sg143
g234
sg145
(lp358
sg24
(I0
I0
I0
tp359
sg148
g149
sg150
(lp360
sg152
(lp361
sa(dp362
g141
S'Tkinter'
p363
sg51
S'_Frame28'
p364
sg143
S'Frame'
p365
sg145
(lp366
(dp367
g51
g227
sg161
S'x'
sasg24
(I0
I1
I4
tp368
sg148
g149
sg150
(lp369
sg152
(lp370
sa(dp371
g141
g285
sg51
S'_Frame29'
p372
sg143
g287
sg145
(lp373
sg24
(I0
I1
I0
tp374
sg148
g149
sg150
(lp375
sg152
(lp376
sa(dp377
g141
S'Tkinter'
p378
sg51
S'_Frame3'
p379
sg143
S'Frame'
p380
sg145
(lp381
sg24
(I0
I2
tp382
sg148
g149
sg150
(lp383
sg152
(lp384
sa(dp385
g141
g285
sg51
S'_Frame30'
p386
sg143
g287
sg145
(lp387
(dp388
g51
S'expand'
p389
sg161
S'yes'
p390
sa(dp391
g51
g227
sg161
S'x'
sasg24
(I0
I1
I1
I1
tp392
sg148
g149
sg150
(lp393
sg152
(lp394
sa(dp395
g141
g285
sg51
S'_Frame31'
p396
sg143
g287
sg145
(lp397
(dp398
g51
g389
sg161
g390
sa(dp399
g51
g227
sg161
S'x'
sasg24
(I0
I1
I1
I0
tp400
sg148
g149
sg150
(lp401
sg152
(lp402
sa(dp403
g141
g378
sg51
S'_Frame4'
p404
sg143
g380
sg145
(lp405
(dp406
g51
g227
sg161
S'y'
sasg24
(I0
I1
tp407
sg148
g149
sg150
(lp408
sg152
(lp409
(dp410
g51
g335
sg161
S'c:#dbdbdb'
p411
sg168
Nsasa(dp412
g141
g208
sg51
S'_Frame5'
p413
sg143
g210
sg145
(lp414
sg24
(I0
I0
I7
I0
tp415
sg148
g149
sg150
(lp416
sg152
(lp417
sa(dp418
g141
g208
sg51
S'_Frame6'
p419
sg143
g210
sg145
(lp420
sg24
(I0
I0
I5
tp421
sg148
g149
sg150
(lp422
sg152
(lp423
sa(dp424
g141
g222
sg51
S'_Frame7'
p425
sg143
g224
sg145
(lp426
(dp427
g51
g227
sg161
S'x'
sasg24
(I0
I0
I2
tp428
sg148
g149
sg150
(lp429
sg152
(lp430
sa(dp431
g141
S'Tkinter'
p432
sg51
S'_Frame8'
p433
sg143
S'Frame'
p434
sg145
(lp435
sg24
(I0
I0
I7
I2
tp436
sg148
g149
sg150
(lp437
sg152
(lp438
sa(dp439
g141
g247
sg51
S'_Frame9'
p440
sg143
g249
sg145
(lp441
(dp442
g51
g227
sg161
S'x'
sasg24
(I0
I1
I3
tp443
sg148
g149
sg150
(lp444
sg152
(lp445
sa(dp446
g141
g155
sg51
S'_LSE4'
p447
sg143
g157
sg145
(lp448
(dp449
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp450
I1862
aI2382
asg150
(lp451
sg152
(lp452
(dp453
g51
g166
sg161
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154
p454
sg168
Nsa(dp455
g51
g170
sg161
S'device'
p456
sg168
S'is.as'
p457
sa(dp458
g51
g174
sg161
S'lse4'
p459
sg168
Nsa(dp460
g51
g177
sg161
g178
sg168
I1
sa(dp461
g51
g180
sg161
g181
sg168
Nsasa(dp462
g141
g155
sg51
S'_LSR4'
p463
sg143
g157
sg145
(lp464
(dp465
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp466
I1862
aI2164
asg150
(lp467
sg152
(lp468
(dp469
g51
g166
sg161
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204
p470
sg168
Nsa(dp471
g51
g170
sg161
S'device'
p472
sg168
S'is.as'
p473
sa(dp474
g51
g174
sg161
S'lsr4'
p475
sg168
Nsa(dp476
g51
g177
sg161
g178
sg168
I1
sa(dp477
g51
g180
sg161
g181
sg168
Nsasa(dp478
g141
g183
sg51
S'_Label1'
p479
sg143
S'Label'
p480
sg145
(lp481
sg24
Nsg148
(lp482
I1862
aI206
asg150
(lp483
sg152
(lp484
(dp485
g51
S'text'
p486
sg161
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 COM-\u043f\u043e\u0440\u0442
p487
sg168
Nsasa(dp488
g141
S'Tkinter'
p489
sg51
S'_Label10'
p490
sg143
S'Label'
p491
sg145
(lp492
sg24
Nsg148
(lp493
I1351
aI7050
asg150
(lp494
sg152
(lp495
(dp496
g51
g486
sg161
S'at frequency trim:'
p497
sg168
Nsasa(dp498
g141
S'Tkinter'
p499
sg51
S'_Label11'
p500
sg143
S'Label'
p501
sg145
(lp502
sg24
Nsg148
(lp503
I3500
aI8767
asg150
(lp504
sg152
(lp505
(dp506
g51
g486
sg161
V\u041b\u0421-\u04204:
p507
sg168
Nsasa(dp508
g141
g499
sg51
S'_Label12'
p509
sg143
g501
sg145
(lp510
sg24
Nsg148
(lp511
I4674
aI8815
asg150
(lp512
sg152
(lp513
(dp514
g51
g486
sg161
V\u041c\u0410:
p515
sg168
Nsasa(dp516
g141
S'Tkinter'
p517
sg51
S'_Label13'
p518
sg143
S'Label'
p519
sg145
(lp520
sg24
Nsg148
(lp521
I3360
aI9154
asg150
(lp522
sg152
(lp523
(dp524
g51
g486
sg161
V\u0414\u043b\u044f \u043a\u0430\u0441\u0441\u0435\u0442\u044b 1-\u041c-5:
p525
sg168
Nsasa(dp526
g141
S'Tkinter'
p527
sg51
S'_Label2'
p528
sg143
S'Label'
p529
sg145
(lp530
sg24
Nsg148
(lp531
I1850
aI2878
asg150
(lp532
sg152
(lp533
(dp534
g51
g486
sg161
V\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:
p535
sg168
Nsasa(dp536
g141
S'Tkinter'
p537
sg51
S'_Label3'
p538
sg143
S'Label'
p539
sg145
(lp540
(dp541
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp542
I341
aI1221
asg150
(lp543
sg152
(lp544
(dp545
g51
g486
sg161
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:
p546
sg168
Nsa(dp547
g51
S'justify'
p548
sg161
g181
sg168
Nsasa(dp549
g141
g537
sg51
S'_Label4'
p550
sg143
g539
sg145
(lp551
sg24
Nsg148
(lp552
I4680
aI1330
asg150
(lp553
sg152
(lp554
(dp555
g51
g486
sg161
V\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:
p556
sg168
Nsasa(dp557
g141
g537
sg51
S'_Label5'
p558
sg143
g539
sg145
(lp559
sg24
Nsg148
(lp560
I1850
aI5067
asg150
(lp561
sg152
(lp562
(dp563
g51
g486
sg161
S'phy ipaddr:'
p564
sg168
Nsasa(dp565
g141
g537
sg51
S'_Label6'
p566
sg143
g539
sg145
(lp567
sg24
Nsg148
(lp568
I1850
aI5514
asg150
(lp569
sg152
(lp570
(dp571
g51
g486
sg161
S'eth ipaddr:'
p572
sg168
Nsasa(dp573
g141
g537
sg51
S'_Label7'
p574
sg143
g539
sg145
(lp575
sg24
Nsg148
(lp576
I1844
aI5985
asg150
(lp577
sg152
(lp578
(dp579
g51
g486
sg161
S'phy macaddr:'
p580
sg168
Nsasa(dp581
g141
g537
sg51
S'_Label8'
p582
sg143
g539
sg145
(lp583
sg24
Nsg148
(lp584
I1850
aI6433
asg150
(lp585
sg152
(lp586
(dp587
g51
g486
sg161
S'eth macaddr:'
p588
sg168
Nsasa(dp589
g141
S'Tkinter'
p590
sg51
S'_Label9'
p591
sg143
S'Label'
p592
sg145
(lp593
sg24
Nsg148
(lp594
I1862
aI4583
asg150
(lp595
sg152
(lp596
(dp597
g51
g486
sg161
S'at addr'
p598
sg168
Nsasa(dp599
g141
g155
sg51
S'_MA41'
p600
sg143
g157
sg145
(lp601
(dp602
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp603
I481
aI1560
asg150
(lp604
sg152
(lp605
(dp606
g51
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41
p607
sg168
Nsa(dp608
g51
g170
sg161
S'device'
p609
sg168
S'is.as'
p610
sa(dp611
g51
g174
sg161
S'ma41'
p612
sg168
Nsa(dp613
g51
g177
sg161
g178
sg168
I1
sa(dp614
g51
g180
sg161
g181
sg168
Nsasa(dp615
g141
g155
sg51
S'_MA45'
p616
sg143
g157
sg145
(lp617
sg24
Nsg148
(lp618
I201
aI1838
asg150
(lp619
sg152
(lp620
(dp621
g51
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45
p622
sg168
Nsa(dp623
g51
g170
sg161
S'device'
p624
sg168
S'is.as'
p625
sa(dp626
g51
g174
sg161
S'ma45'
p627
sg168
Nsa(dp628
g51
g177
sg161
g178
sg168
I1
sasa(dp629
g141
g183
sg51
S'_ReceivedText'
p630
sg143
S'Text'
p631
sg145
(lp632
sg24
Nsg148
(lp633
I5161
aI5018
asg150
(lp634
sg152
(lp635
(dp636
g51
S'height'
p637
sg161
S'n:35'
p638
sg168
Nsa(dp639
g51
S'font'
p640
sg161
(S'@Arial Unicode MS'
I10
S''
tp641
sg168
Nsasa(dp642
g141
S'Tkinter'
p643
sg51
S'_Retry'
p644
sg143
S'Button'
p645
sg145
(lp646
sg24
Nsg148
(lp647
I1869
aI4123
asg150
(lp648
sg152
(lp649
(dp650
g51
g191
sg161
S'Retry (down key)'
p651
sg168
Nsa(dp652
g51
S'state'
p653
sg161
S'disabled'
p654
sg168
Nsa(dp655
g51
g194
sg161
S'_on__Retry_command'
p656
sg168
I1
sasa(dp657
g141
g590
sg51
S'_ataddr'
p658
sg143
S'Entry'
p659
sg145
(lp660
sg24
Nsg148
(lp661
I1856
aI4849
asg150
(lp662
sg152
(lp663
(dp664
g51
S'state'
p665
sg161
S'disabled'
p666
sg168
Nsa(dp667
g51
S'textvariable'
p668
sg161
S'ataddr'
p669
sg168
S's.as'
p670
sasa(dp671
g141
S'Tkinter'
p672
sg51
S'_btn_adf_tst'
p673
sg143
S'Button'
p674
sg145
(lp675
(dp676
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp677
I3737
aI7074
asg150
(lp678
sg152
(lp679
(dp680
g51
g191
sg161
S'adf tst'
p681
sg168
Nsa(dp682
g51
g653
sg161
S'disabled'
p683
sg168
Nsa(dp684
g51
g194
sg161
S'_on__btn_adf_tst_command'
p685
sg168
I1
sasa(dp686
g141
g672
sg51
S'_btn_adf_tst_50'
p687
sg143
g674
sg145
(lp688
(dp689
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp690
I4017
aI7098
asg150
(lp691
sg152
(lp692
(dp693
g51
g191
sg161
S'adf tst 50'
p694
sg168
Nsa(dp695
g51
g653
sg161
g683
sg168
Nsa(dp696
g51
g194
sg161
S'_on__btn_adf_tst_50_command'
p697
sg168
I1
sasa(dp698
g141
g672
sg51
S'_btn_at_dst_rt'
p699
sg143
g674
sg145
(lp700
(dp701
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp702
I3506
aI8319
asg150
(lp703
sg152
(lp704
(dp705
g51
g191
sg161
S'at dst 0xXXXX + rt'
p706
sg168
Nsa(dp707
g51
g653
sg161
g683
sg168
Nsa(dp708
g51
g194
sg161
S'_on__btn_at_dst_rt_command'
p709
sg168
I1
sasa(dp710
g141
g499
sg51
S'_btn_ataddr'
p711
sg143
S'Button'
p712
sg145
(lp713
sg24
Nsg148
(lp714
I4297
aI6687
asg150
(lp715
sg152
(lp716
(dp717
g51
g191
sg161
S'at addr'
p718
sg168
Nsa(dp719
g51
g653
sg161
S'disabled'
p720
sg168
Nsa(dp721
g51
g194
sg161
S'_on__btn_ataddr_command'
p722
sg168
I1
sasa(dp723
g141
g672
sg51
S'_btn_dbg0'
p724
sg143
g674
sg145
(lp725
(dp726
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp727
I3950
aI5707
asg150
(lp728
sg152
(lp729
(dp730
g51
g191
sg161
S'dbg 0'
p731
sg168
Nsa(dp732
g51
g653
sg161
g683
sg168
Nsa(dp733
g51
g194
sg161
S'_on__btn_dbg0_command'
p734
sg168
I1
sasa(dp735
g141
g672
sg51
S'_btn_dbg1'
p736
sg143
g674
sg145
(lp737
(dp738
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp739
I4382
aI5707
asg150
(lp740
sg152
(lp741
(dp742
g51
g191
sg161
S'dbg 1'
p743
sg168
Nsa(dp744
g51
g653
sg161
g683
sg168
Nsa(dp745
g51
g194
sg161
S'_on__btn_dbg1_command'
p746
sg168
I1
sasa(dp747
g141
g517
sg51
S'_btn_dev_mac'
p748
sg143
S'Button'
p749
sg145
(lp750
sg24
Nsg148
(lp751
I4066
aI9528
asg150
(lp752
sg152
(lp753
(dp754
g51
g191
sg161
S'dev mac'
p755
sg168
Nsa(dp756
g51
g653
sg161
S'disabled'
p757
sg168
Nsa(dp758
g51
g194
sg161
S'_on__btn_dev_mac_command'
p759
sg168
I1
sasa(dp760
g141
g517
sg51
S'_btn_dev_req'
p761
sg143
g749
sg145
(lp762
sg24
Nsg148
(lp763
I4674
aI9504
asg150
(lp764
sg152
(lp765
(dp766
g51
g191
sg161
S'dev req'
p767
sg168
Nsa(dp768
g51
g653
sg161
g757
sg168
Nsa(dp769
g51
g194
sg161
S'_on__btn_dev_req_command'
p770
sg168
I1
sasa(dp771
g141
g517
sg51
S'_btn_enter'
p772
sg143
g749
sg145
(lp773
sg24
Nsg148
(lp774
I3822
aI9565
asg150
(lp775
sg152
(lp776
(dp777
g51
g191
sg161
S'Enter key'
p778
sg168
Nsa(dp779
g51
g653
sg161
g757
sg168
Nsa(dp780
g51
g194
sg161
S'_on__btn_enter_command'
p781
sg168
I1
sasa(dp782
g141
g672
sg51
S'_btn_exe_at_dst_rt'
p783
sg143
g674
sg145
(lp784
sg24
Nsg148
(lp785
I4358
aI8815
asg150
(lp786
sg152
(lp787
(dp788
g51
g191
sg161
S'exe 0xXXXX at dst 0xXXXX + rt'
p789
sg168
Nsa(dp790
g51
g653
sg161
g683
sg168
Nsa(dp791
g51
g194
sg161
S'_on__btn_exe_at_dst_rt_command'
p792
sg168
I1
sasa(dp793
g141
S'Tkinter'
p794
sg51
S'_btn_lamp_wdg_0'
p795
sg143
S'Button'
p796
sg145
(lp797
sg24
Nsg148
(lp798
I414
aI9093
asg150
(lp799
sg152
(lp800
(dp801
g51
g191
sg161
S'lamp wdg 0'
p802
sg168
Nsa(dp803
g51
g653
sg161
S'disabled'
p804
sg168
Nsa(dp805
g51
g194
sg161
S'_on__btn_adf_wdg_0_command'
p806
sg168
I1
sasa(dp807
g141
S'Tkinter'
p808
sg51
S'_btn_phyipaddr'
p809
sg143
S'Button'
p810
sg145
(lp811
(dp812
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp813
I3974
aI6699
asg150
(lp814
sg152
(lp815
(dp816
g51
g191
sg161
S'phy ipaddr'
p817
sg168
Nsa(dp818
g51
g653
sg161
S'disabled'
p819
sg168
Nsa(dp820
g51
g194
sg161
S'_on__btn_phyipaddr_command'
p821
sg168
I1
sasa(dp822
g141
g808
sg51
S'_btn_ping'
p823
sg143
g810
sg145
(lp824
sg24
Nsg148
(lp825
I3956
aI6227
asg150
(lp826
sg152
(lp827
(dp828
g51
g191
sg161
S'ping'
p829
sg168
Nsa(dp830
g51
g653
sg161
g819
sg168
Nsa(dp831
g51
g194
sg161
S'_on__btn_ping_command'
p832
sg168
I1
sasa(dp833
g141
g517
sg51
S'_btn_root'
p834
sg143
g749
sg145
(lp835
(dp836
g51
g160
sg161
S'w'
sasg24
Nsg148
(lp837
I3256
aI9553
asg150
(lp838
sg152
(lp839
(dp840
g51
g191
sg161
S'root'
p841
sg168
Nsa(dp842
g51
g653
sg161
g757
sg168
Nsa(dp843
g51
g194
sg161
S'_on__btn_root_command'
p844
sg168
I1
sasa(dp845
g141
g517
sg51
S'_btn_talnakh'
p846
sg143
g749
sg145
(lp847
sg24
Nsg148
(lp848
I3524
aI9565
asg150
(lp849
sg152
(lp850
(dp851
g51
g191
sg161
S'talnakh'
p852
sg168
Nsa(dp853
g51
g653
sg161
g757
sg168
Nsa(dp854
g51
g194
sg161
S'_on__btn_tanakh_command'
p855
sg168
I1
sasa(dp856
g141
g672
sg51
S'_entry_at_addr'
p857
sg143
S'Entry'
p858
sg145
(lp859
sg24
Nsg148
(lp860
I4090
aI8259
asg150
(lp861
sg152
(lp862
(dp863
g51
g668
sg161
S'entry_at_addr'
p864
sg168
S's.as'
p865
sasa(dp866
g141
g672
sg51
S'_entry_at_addr_exe'
p867
sg143
g858
sg145
(lp868
sg24
Nsg148
(lp869
I3834
aI8779
asg150
(lp870
sg152
(lp871
(dp872
g51
g668
sg161
S'entry_at_addr_exe'
p873
sg168
S's.as'
p874
sasa(dp875
g141
g672
sg51
S'_entry_at_addr_rt'
p876
sg143
g858
sg145
(lp877
sg24
Nsg148
(lp878
I4960
aI8815
asg150
(lp879
sg152
(lp880
(dp881
g51
g668
sg161
S'entry_at_addr_rt'
p882
sg168
S's.as'
p883
sasa(dp884
g141
g517
sg51
S'_entry_dev_mac'
p885
sg143
S'Entry'
p886
sg145
(lp887
sg24
Nsg148
(lp888
I4364
aI9541
asg150
(lp889
sg152
(lp890
(dp891
g51
g668
sg161
S'dev_mac'
p892
sg168
S's.as'
p893
sasa(dp894
g141
g537
sg51
S'_ethipaddr'
p895
sg143
S'Entry'
p896
sg145
(lp897
sg24
Nsg148
(lp898
I1844
aI5756
asg150
(lp899
sg152
(lp900
(dp901
g51
g665
sg161
g666
sg168
Nsa(dp902
g51
g668
sg161
S'ethipaddr'
p903
sg168
S's.as'
p904
sasa(dp905
g141
g537
sg51
S'_ethmacaddr'
p906
sg143
g896
sg145
(lp907
sg24
Nsg148
(lp908
I1844
aI6663
asg150
(lp909
sg152
(lp910
(dp911
g51
g665
sg161
g666
sg168
Nsa(dp912
g51
g668
sg161
S'ethmacaddr'
p913
sg168
S's.as'
p914
sasa(dp915
g141
S'Tkinter'
p916
sg51
S'_ifbw0'
p917
sg143
S'Radiobutton'
p918
sg145
(lp919
sg24
Nsg148
(lp920
I1339
aI8065
asg150
(lp921
sg152
(lp922
(dp923
g51
g166
sg161
Vifbw 0 (\u0434\u043b\u044f ADF7021)
p924
sg168
Nsa(dp925
g51
g170
sg161
S'ifbw'
p926
sg168
S'is.ai'
p927
sa(dp928
g51
g174
sg161
S'0'
sg168
Nsasa(dp929
g141
g916
sg51
S'_ifbw1'
p930
sg143
g918
sg145
(lp931
sg24
Nsg148
(lp932
I1327
aI8368
asg150
(lp933
sg152
(lp934
(dp935
g51
g166
sg161
Vifbw 1 (\u0434\u043b\u044f ADF7021-N)
p936
sg168
Nsa(dp937
g51
g170
sg161
S'ifbw'
p938
sg168
S'is.ai'
p939
sa(dp940
g51
g174
sg161
S'1'
sg168
Nsasa(dp941
g141
g808
sg51
S'_ipaddr'
p942
sg143
S'Entry'
p943
sg145
(lp944
sg24
Nsg148
(lp945
I4315
aI6227
asg150
(lp946
sg152
(lp947
(dp948
g51
g668
sg161
S'entry_ipaddr'
p949
sg168
S's.as'
p950
sasa(dp951
g141
g183
sg51
S'_label_Rcvd_Text'
p952
sg143
g480
sg145
(lp953
sg24
Nsg148
(lp954
I5192
aI4450
asg150
(lp955
sg152
(lp956
(dp957
g51
g486
sg161
V\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:
p958
sg168
Nsasa(dp959
g141
g489
sg51
S'_left'
p960
sg143
S'Button'
p961
sg145
(lp962
sg24
Nsg148
(lp963
I219
aI7533
asg150
(lp964
sg152
(lp965
(dp966
g51
g191
sg161
S'<-------(left key)--at trim left'
p967
sg168
Nsa(dp968
g51
g653
sg161
S'disabled'
p969
sg168
Nsa(dp970
g51
g194
sg161
S'_on__left_command'
p971
sg168
I1
sasa(dp972
g141
S'Tkinter'
p973
sg51
S'_ma45_treshold_patch'
p974
sg143
S'Checkbutton'
p975
sg145
(lp976
sg24
Nsg148
(lp977
I998
aI1826
asg150
(lp978
sg152
(lp979
(dp980
g51
S'text'
p981
sg161
S'MA-45 patch'
p982
sg168
Nsa(dp983
g51
S'state'
p984
sg161
S'disabled'
p985
sg168
Nsa(dp986
g51
S'variable'
p987
sg161
S'ma45_treshold_patch'
p988
sg168
S'sif.ai'
p989
sasa(dp990
g141
g537
sg51
S'_phyipaddr'
p991
sg143
g896
sg145
(lp992
sg24
Nsg148
(lp993
I1844
aI5272
asg150
(lp994
sg152
(lp995
(dp996
g51
g665
sg161
g666
sg168
Nsa(dp997
g51
g668
sg161
S'phyipaddr'
p998
sg168
S's.as'
p999
sasa(dp1000
g141
g537
sg51
S'_phymacaddr'
p1001
sg143
g896
sg145
(lp1002
sg24
Nsg148
(lp1003
I1856
aI6215
asg150
(lp1004
sg152
(lp1005
(dp1006
g51
g665
sg161
g666
sg168
Nsa(dp1007
g51
g668
sg161
S'phymacaddr'
p1008
sg168
S's.as'
p1009
sasa(dp1010
g141
g183
sg51
S'_prog_and_increment'
p1011
sg143
g185
sg145
(lp1012
sg24
Nsg148
(lp1013
I1887
aI3374
asg150
(lp1014
sg152
(lp1015
(dp1016
g51
g191
sg161
S'TEST RF (up key)'
p1017
sg168
Nsa(dp1018
g51
g653
sg161
S'disabled'
p1019
sg168
Nsa(dp1020
g51
g194
sg161
S'_on__prog_and_increment_command'
p1021
sg168
I1
sasa(dp1022
g141
g489
sg51
S'_right'
p1023
sg143
g961
sg145
(lp1024
sg24
Nsg148
(lp1025
I755
aI7582
asg150
(lp1026
sg152
(lp1027
(dp1028
g51
g191
sg161
S'at trim right--(right key)------->'
p1029
sg168
Nsa(dp1030
g51
g653
sg161
g969
sg168
Nsa(dp1031
g51
g194
sg161
S'_on__right_command'
p1032
sg168
I1
sasa(dp1033
g141
g183
sg51
S'_send'
p1034
sg143
g185
sg145
(lp1035
(dp1036
g51
g227
sg161
S'x'
sasg24
Nsg148
(lp1037
I3987
aI2938
asg150
(lp1038
sg152
(lp1039
(dp1040
g51
g191
sg161
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p1041
sg168
Nsa(dp1042
g51
g653
sg161
S'disabled'
p1043
sg168
Nsa(dp1044
g51
g194
sg161
S'_on__send_command'
p1045
sg168
I1
sasa(dp1046
g141
S'Tkinter'
p1047
sg51
S'_send2'
p1048
sg143
S'Button'
p1049
sg145
(lp1050
sg24
Nsg148
(lp1051
I4705
aI2963
asg150
(lp1052
sg152
(lp1053
(dp1054
g51
g191
sg161
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p1055
sg168
Nsa(dp1056
g51
g653
sg161
S'disabled'
p1057
sg168
Nsa(dp1058
g51
g194
sg161
S'_on__send2_command'
p1059
sg168
I1
sasa(dp1060
g141
g183
sg51
S'_serialnumber'
p1061
sg143
S'Entry'
p1062
sg145
(lp1063
sg24
Nsg148
(lp1064
I1856
aI3071
asg150
(lp1065
sg152
(lp1066
(dp1067
g51
g668
sg161
S'serial_number'
p1068
sg168
S's.as'
p1069
sasa(dp1070
g141
S'Tkinter'
p1071
sg51
S'_set_ifbw'
p1072
sg143
S'Button'
p1073
sg145
(lp1074
sg24
Nsg148
(lp1075
I1795
aI8259
asg150
(lp1076
sg152
(lp1077
(dp1078
g51
g191
sg161
S'Set IFBW'
p1079
sg168
Nsa(dp1080
g51
g653
sg161
g666
sg168
Nsa(dp1081
g51
g194
sg161
S'_on__set_ifbw_command'
p1082
sg168
I1
sasa(dp1083
g141
S'Tkinter'
p1084
sg51
S'_test_adf'
p1085
sg143
S'Button'
p1086
sg145
(lp1087
sg24
Nsg148
(lp1088
I1862
aI3736
asg150
(lp1089
sg152
(lp1090
(dp1091
g51
g191
sg161
S'TEST ADF (right key)'
p1092
sg168
Nsa(dp1093
g51
g653
sg161
S'disabled'
p1094
sg168
Nsa(dp1095
g51
g194
sg161
S'_on__right_command'
p1096
sg168
I1
sasa(dp1097
g141
g183
sg51
S'_text_to_send'
p1098
sg143
g1062
sg145
(lp1099
sg24
Nsg148
(lp1100
I3987
aI2189
asg150
(lp1101
sg152
(lp1102
(dp1103
g51
g668
sg161
S'text_to_send'
p1104
sg168
S's.as'
p1105
sasa(dp1106
g141
g1047
sg51
S'_text_to_send2'
p1107
sg143
S'Entry'
p1108
sg145
(lp1109
sg24
Nsg148
(lp1110
I4680
aI2201
asg150
(lp1111
sg152
(lp1112
(dp1113
g51
g668
sg161
S'text_to_send2'
p1114
sg168
S's.as'
p1115
sasasS'BaseClass'
p1116
g54
sg34
I1
sasS'VisibleForm'
p1117
g52
sS'SelectedForm'
p1118
g52
sg51
g6
sa.